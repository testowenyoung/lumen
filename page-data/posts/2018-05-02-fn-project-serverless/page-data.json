{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2018-05-02-fn-project-serverless/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"d13669c9-8c98-5c96-a92d-d819dd9f331a","excerpt":"Back in October, Oracle first announced the open source Fn Project at the JavaOne conference. Since then, the team here at Serverless has kept a keen eye on it‚Ä¶","html":"<p>Back in October, Oracle first announced the open source <a href=\"http://fnproject.io/\">Fn Project</a> at the JavaOne conference. Since then, the team here at Serverless has kept a keen eye on it.</p>\n<p>More function providers means more freedom for FaaS users &#x26; less vendor lock-in. This is one of our driving principles behind <a href=\"https://serverless.com/framework/docs/\">the Serverless Framework</a>.</p>\n<p>So, it was only natural to bring the Fn Project into the growing list of <a href=\"https://serverless.com/framework/docs/providers/\">Serverless function providers</a> üéâ</p>\n<h2>About Fn</h2>\n<p>The Fn Project uses a vendor agnostic approach, leveraging containers to allow organizations run Fn either on premise or in their cloud of choice.</p>\n<p>Another driving force behind the project is: a clear separation of serverless &#x26; container orchestration is important. So, whether you‚Äôre on Kubernetes or any other provider, Fn is agnostic when it comes to your container orchestration of choice.</p>\n<h3>Use any containerized code as a function</h3>\n<p>Watch this 10 minute video for a quick overview on the project, and see a sweet demo of their Fn Flow component:</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe src=\"https://www.youtube.com/embed/7bUnlTK_WTo?start=125\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>The platform is container-native, enabling users to write functions in any programming language, with excellent support for local development and testing. Fn even allows devs to ‚Äúbring their own Dockerfile‚Äù such that ANY containerized code can be used as a function.</p>\n<h3>The Fn Project consists of 4 major components:</h3>\n<p><strong>Fn Server</strong> is the Functions-as-a-Service system that allows developers to easily build, deploy, and scale their functions into a multi-cloud environment</p>\n<p>The <strong>Fn Load Balancer</strong> (Fn LB) allows operators to deploy clusters of Fn servers and route traffic to them intelligently. Most importantly, it will route traffic to nodes where hot functions are running (to ensure optimal performance), as well as distribute load if traffic to a specific function increases.</p>\n<p><strong>Fn FDK‚Äôs</strong>‚Ää(Function Development Kits) are aimed at quickly bootstrapping functions in all languages, providing a data binding model for function inputs, making it easier to test your functions, and laying the foundation for building more complex serverless applications.</p>\n<p><strong>Fn Flow</strong> allows developers to build and orchestrate higher-level workflows of functions, all inside their programming language of choice. It makes it easy to use parallelism, sequencing/chaining, error handling, fan in/out, etc., without learning complicated external models built with long JSON or YAML templates.</p>\n<p>For more information on the Fn Project and why they built it, I highly recommend <a href=\"https://medium.com/fnproject/8-reasons-why-we-built-the-fn-project-bcfe45c5ae63\">checking out this post</a>.</p>\n<h2>Fn + Serverless Framework</h2>\n<img align=\"right\" width=\"160\" height=\"160\" src=\"https://s3-us-west-2.amazonaws.com/assets.site.serverless.com/blog/fn-thumb.jpg\">\n<p>Starting today, you can now deploy your Fn functions using the Serverless Framework and the familiar <code class=\"language-text\">serverless.yml</code> config we have all grown to know and love.</p>\n<h2>Getting Started with Serverless &#x26; Fn</h2>\n<p>Make sure you have the Serverless Framework installed on your machine:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install serverless framework if you haven't already</span>\n<span class=\"token function\">npm</span> i serverless -g</code></pre></div>\n<p>Then, create a new service with the <code class=\"language-text\">sls create</code> command and supply the newly added <code class=\"language-text\">fn-nodejs</code> or <code class=\"language-text\">fn-go</code> templates:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Create a new Serverless Service/Project</span>\n$ serverless create --template fn-nodejs --path new-fn-project\n<span class=\"token comment\"># Change into the newly created directory</span>\n$ <span class=\"token builtin class-name\">cd</span> new-fn-project\n<span class=\"token comment\"># Install fn provider dependency</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n<span class=\"token comment\"># Install the function code dependencies</span>\n$ <span class=\"token builtin class-name\">cd</span> hello <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre></div>\n<p>Fn functions run in Docker containers, so you need a running fn service in order to run it.</p>\n<p>See the guide on <a href=\"https://serverless.com/framework/docs/providers/fn/guide/installation/\">installing Fn</a> to finish setup.</p>\n<h3>Project Structure</h3>\n<p>The Fn Project structure is similar to all other Serverless Framework providers, with one tiny difference. Instead of a <code class=\"language-text\">handler</code> property pointing to where the code lives, the function code location is driven by convention.</p>\n<p><img src=\"https://user-images.githubusercontent.com/532272/39499387-620821c6-4d62-11e8-9be3-e09a2e9a61e9.jpg\" alt=\"fn-sls-code-ref-structure\"></p>\n<p>The function key will reference the folder path, and inside that folder path it will look for a <code class=\"language-text\">func.[Your Runtime]</code> (a.k.a <code class=\"language-text\">func.js</code> or <code class=\"language-text\">func.go</code>).</p>\n<p>So, the below serverless.yml is looking for a <code class=\"language-text\">./hello/func.js</code> file when <code class=\"language-text\">sls deploy</code> is run:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># The `service` block is the name of the service</span>\n<span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hello<span class=\"token punctuation\">-</span>world\n\n<span class=\"token comment\"># The `provider` block defines where your service will be deployed</span>\n<span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> fn\n\n<span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> serverless<span class=\"token punctuation\">-</span>fn\n\n<span class=\"token comment\"># The `functions` block defines what code to deploy</span>\n<span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hello</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># &lt;- hello references the ./hello folder and the func.js file inside</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hello\n    <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 0.0.1\n    <span class=\"token key atrule\">format</span><span class=\"token punctuation\">:</span> json\n    <span class=\"token key atrule\">runtime</span><span class=\"token punctuation\">:</span> node\n    <span class=\"token key atrule\">events</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /hello<span class=\"token punctuation\">-</span>there</code></pre></div>\n<h3>Deployment</h3>\n<p>To deploy, simply run the deploy command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">serverless deploy</code></pre></div>\n<p>Use this method when you have updated your Function, Event or Resource configuration in <code class=\"language-text\">serverless.yml</code> and you want to deploy that change (or multiple changes at the same time) to your Fn cluster.</p>\n<h3>How It Works</h3>\n<p>The Serverless Framework translates all syntax in <code class=\"language-text\">serverless.yml</code> to <a href=\"https://github.com/fnproject/fn\">Fn calls</a> to provision your functions.</p>\n<p>For each function in your <code class=\"language-text\">serverless.yml</code> file, Fn will create an Fn Function.</p>\n<p>For example, let‚Äôs take the following example <code class=\"language-text\">serverless.yml</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> hello<span class=\"token punctuation\">-</span>world\n\n<span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># Your \"Functions\"</span>\n  <span class=\"token key atrule\">hello</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hi\n    <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 0.0.1\n    <span class=\"token key atrule\">runtime</span><span class=\"token punctuation\">:</span> go\n    <span class=\"token key atrule\">events</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /hello</code></pre></div>\n<p>When deploying that file, Fn will provide you with one endpoint that you can hit at: <code class=\"language-text\">FN_API_URL/r/hello-world/hello</code></p>\n<h2>Links and Resources</h2>\n<p>Here‚Äôs what you need to get started with the Fn plugin now:</p>\n<ul>\n<li><a href=\"https://github.com/fnproject/serverless-integration/\">GitHub repo</a></li>\n<li><a href=\"https://serverless.com/framework/docs/providers/fn/\">Serverless + Fn docs</a></li>\n<li><a href=\"http://fnproject.io/\">Fn homepage</a></li>\n</ul>\n<p>If you have questions or comments about the integration, we‚Äôd love to hear from you in the comments below or over on the <a href=\"https://forum.serverless.com/\">serverless forums</a>.</p>\n<p>Can‚Äôt wait to see what you build!</p>","frontmatter":{"title":"Fn Project brings containerized, cloud-agnostic functions to a cloud near you","date":"May 02, 2018","description":"The Fn Project is an open source, container-native serverless platform that you can run anywhere‚Äîon any cloud or on-premise."}}},"pageContext":{"slug":"/posts/2018-05-02-fn-project-serverless/","previous":{"fields":{"slug":"/posts/2018-04-30-how-to-create-landing-page-with-serverless-components/"},"frontmatter":{"title":"How to create a landing page with serverless components"}},"next":{"fields":{"slug":"/posts/2018-05-03-react-to-any-cloud-event-hosted-event-gateway/"},"frontmatter":{"title":"React to any cloud event with hosted Event Gateway"}}}}}