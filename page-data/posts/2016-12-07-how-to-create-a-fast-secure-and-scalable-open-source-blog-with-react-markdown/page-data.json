{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2016-12-07-how-to-create-a-fast-secure-and-scalable-open-source-blog-with-react-markdown/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"6a7b21af-d039-5cf9-bd95-b95eaa296a7a","excerpt":"Creating blog content is a proven source of sustainable organic traffic, and a great way to drive qualified leads. Most companies look to WordPress, SquareSpaceâ€¦","html":"<img align=\"right\" width=\"250\" src=\"https://s3-us-west-2.amazonaws.com/assets.site.serverless.com/blog/blogging.jpg\">\nContent marketing has been growing in popularity for years, and for good reason, **it works**.\n<p>Creating blog content is a <a href=\"https://research.hubspot.com/reports/compounding-blog-posts-what-they-are-and-why-they-matter\">proven source of sustainable organic traffic</a>, and a great way to drive qualified leads.</p>\n<p>Most companies look to WordPress, SquareSpace, or Medium for their company blogs. While these sites work for hosting blog content, they come with a number of downsides, especially if your target audience is developers.</p>\n<p><strong>Problems with the typical company blog setup:</strong></p>\n<ul>\n<li>Barriers to contribute</li>\n<li>Speed &#x26; security issues (cough cough WordPress)</li>\n<li>Traffic cannibalization (Medium)</li>\n<li>Limited ability to customize &#x26; reuse product UI</li>\n<li>Poor authoring experience for developer-focused content</li>\n</ul>\n<p>This post talks about a different approach that, in my opinion, is better than the traditional blog setup.</p>\n<p>Letâ€™s explore the <strong>100% Open Source, Markdown &#x26; React-powered blog</strong> that youâ€™re reading.</p>\n<h2>The Serverless Blog</h2>\n<p>Serverless.comâ€™s blog is 100% open source content driven by a <a href=\"https://github.com/serverless/blog\">GitHub repo</a> and Markdown files.</p>\n<p>Blog content is fed into our site and rendered with our static website generator of choice <a href=\"http://phenomic.io\">Phenomic</a>.</p>\n<p>Letâ€™s explore the benefits of our blog setup and how they address the problems outlined above.</p>\n<h3>1. Easier to contribute and edit posts</h3>\n<p>Well for starters, anyone with a GitHub account can submit blog post updates, typo fixes, and new content without needing a user account with our site.</p>\n<p align=\"center\">\n  <img src=\"https://s3-us-west-2.amazonaws.com/assets.site.serverless.com/blog/edit-this-post.jpg\">\n</p>\n<p>On every post, including this one, users have a one-click â€˜Edit this postâ€™ link that lets anyone submit updates to posts.</p>\n<p align=\"center\">\n  <img src=\"https://s3-us-west-2.amazonaws.com/assets.site.serverless.com/blog/edit-github-view.jpg\">\n</p>\n<p>This is great for getting streamlined contributions to our blog.</p>\n<p>P.S. Weâ€™re always looking for fresh content. <a href=\"https://serverless.com/blog/contribute/\">Drop us a line if youâ€™re interested in contributing</a>.</p>\n<h3>2. Better developer-focused posts</h3>\n<p>If youâ€™ve ever had to write a code heavy developer-focused blog post in WordPress, itâ€™s a <strong>rather painful</strong> experience. WYSIWYG editors are extremely proficient at mangling code snippets.</p>\n<p>On the flip side, writing in GitHub flavored Markdown makes writing and (more importantly) maintaining blog posts about code MUCH easier.</p>\n<p><strong>Markdown</strong> FTW! ðŸŽ‰</p>\n<p>Side note: If youâ€™re stuck with WordPress, I wrote a plugin to allow you to write in <a href=\"http://davidwells.io/easy-markdown/\">GitHub favored Markdown</a>.</p>\n<h3>3. Unified product experience</h3>\n<p>Weâ€™re using React as our frontend framework of choice for creating our serverless applications (like <a href=\"http://github.com/serverless/dashboard\">dashboard</a>). This is a no-go with other blogging setups.</p>\n<p>If we decided to blog with WordPress, weâ€™d need to maintain 2 separate style/component libraries because WordPress canâ€™t render React components server-side. Keeping styles in sync in multiple platforms is painful and will eventually leads to an inconsistent user experience.</p>\n<p>Luckily, our site and blog are powered by <a href=\"http://phenomic.io\">Phenomic</a>, so we can use all of the same React components we use in our products.</p>\n<p><strong>Code reuse and brand consistency FTW</strong>! ðŸŽ‰</p>\n<h3>4. Scale out of the box</h3>\n<p>Using a static site gives us raw scale out of the box unlike dynamic blogging platforms like WordPress.</p>\n<p><strong>How our static site is built:</strong></p>\n<ol>\n<li><code class=\"language-text\">npm run build</code> uses Reactâ€™s server-side rendering capabilities to build all the static HTML files for the site</li>\n<li>Thatâ€™s it. The site is pre-rendered for all visitors ðŸ”¥</li>\n</ol>\n<p>If we get featured on the front page of the <em>New York Times</em> or Justin Bieber tweets about Serverless, weâ€™re sitting pretty because our site is statically served from the <a href=\"https://www.netlify.com/\">Netlify</a> content delivery network.</p>\n<h3>5. Speed like Whoa ðŸ”¥</h3>\n<p>Because weâ€™re using <a href=\"https://github.com/MoOx/phenomic\">Phenomic</a>, which uses React + React Router under the hood, page fetching and transitions are lightning fast.</p>\n<p>Instead of hard page reloads when navigating around the serverless.com site, you get a single page app experience when navigating through site links.</p>\n<p>Each link clicked only fetches the required data from a <code class=\"language-text\">.json</code> file, instead of a full HTML page like other static site generators.</p>\n<p>Another out-of-the-box benefit with phenomic is <strong>optimistic page rendering</strong>.</p>\n<p>This is an example of how the loading state of a blog post looks while the postâ€™s lightweight <code class=\"language-text\">json</code> data is being fetched.</p>\n<p align=\"center\">\n  <img src=\"https://cloud.githubusercontent.com/assets/532272/19630866/9793f07a-9947-11e6-919a-ba2d81ebcf68.gif\">\n</p>\n<p>As you can see, when navigating to any given page, the visitor gets instant feedback, so the perceived site performance feels snappy.</p>\n<h2>React + Phenomic + Static Websites are the future</h2>\n<p>Ultra scalable, fast, dynamic static websites are the future of frontend sites and I highly recommend checking out our site repo for how itâ€™s all hooked up!</p>\n<p>You can run our site locally by:</p>\n<ol>\n<li><code class=\"language-text\">git clone git@github.com:serverless/site.git</code></li>\n<li><code class=\"language-text\">npm install</code></li>\n<li><code class=\"language-text\">npm start</code></li>\n</ol>\n<p>If I havenâ€™t convinced you yet. Tweet at me <a href=\"http://twitter.com/davidwells\">@DavidWells</a> and I will yell at you.</p>\n<p>Iâ€™m planning a series of posts illustrating how the site is built.</p>\n<p>For now, <a href=\"https://github.com/serverless/site\">checkout the github repo</a>.</p>","frontmatter":{"title":"How to Create a Fast, Secure, and Scalable Open Source Blog with React + Markdown","date":"December 07, 2016","description":"How serverless used phenomic.io to create a fast, secure, and scalable open source blog powered by React & Markdown"}}},"pageContext":{"slug":"/posts/2016-12-07-how-to-create-a-fast-secure-and-scalable-open-source-blog-with-react-markdown/","previous":{"fields":{"slug":"/posts/2016-12-05-recap-serverless-announcements-reinvent/"},"frontmatter":{"title":"2016 AWS re:Invent Recap - Serverless Christmas came early"}},"next":{"fields":{"slug":"/posts/2016-12-15-serverless-v1.4.0/"},"frontmatter":{"title":"C# service template, Alexa event support, service-wide metrics in Serverless Framework v1.4"}}}}}