{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2017-12-18-how-built-static-serverless-website-netlify/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"a2d47c39-d0c8-50d8-8b2f-23b52f76f3f7","excerpt":"The Serverless.com site is (quite obviously, we hope) a serverless site. The benefits to a serverless website should be pretty well-known in this crowd: cheap…","html":"<p>The Serverless.com site is (quite obviously, we hope) a serverless site.</p>\n<p>The benefits to a serverless website should be pretty well-known in this crowd: cheap to run, scalable out of the box, hands-off administration. But our site isn’t just serverless—it’s a statically hosted serverless site.</p>\n<p>Why make it static? WELL, let us count the ways:</p>\n<ul>\n<li>It’s ultra fast (everything served from a CDN)</li>\n<li>Provides a state-of-the-art UX</li>\n<li>Works offline (a la PWA standards)</li>\n<li>More secure</li>\n<li>Easier to reason about, maintain, &#x26; share code across teams</li>\n</ul>\n<p>And people notice:</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">The <a href=\"https://twitter.com/goserverless?ref_src=twsrc%5Etfw\">@goserverless</a> docs are the slickest, smoothest-running SPA I&#39;ve ever used on the web, I think ever. <a href=\"https://t.co/UrOc34Oj9T\">https://t.co/UrOc34Oj9T</a></p>&mdash; Jerome Leclanche (@Adys) <a href=\"https://twitter.com/Adys/status/938785908286947329?ref_src=twsrc%5Etfw\">December 7, 2017</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>In sum, from one engineering team to another, we effing <em>love</em> this website. We want to tell you all about how we built it so that you, too, can have a website you effing love.</p>\n<p>On we go.</p>\n<h1>How do we statically host our site?</h1>\n<p>We (shocker) use the <a href=\"https://serverless.com/framework/\">Serverless Framework</a> for the serverless bit. But what about the static hosting?</p>\n<p>There are two ways (as of this posting) to statically host a site:</p>\n<ol>\n<li>Build a lot of custom stuff yourself</li>\n<li>Use Netlify</li>\n</ol>\n<p>We chose the latter. <a href=\"https://www.netlify.com/\">Netlify</a> has been getting tons of press and adoption, and it’s pretty clear why when you realize how powerful it is.</p>\n<p>We use it for automating CI/CD &#x26; https setup, static site redirects (via <code class=\"language-text\">_redirects</code> file), proxied url handling, deployment notifications, and lots of other stuff we won’t go into right now because all great lists must come to an end somewhere.</p>\n<h2>Deploying a new site with Netlify</h2>\n<p>For starters, you’ll need a static site generator. To help you choose one, here is a great list of <a href=\"https://www.staticgen.com/\">open-source static site generators</a>.</p>\n<p>We use <a href=\"https://phenomic.io/\">Phenomic</a>. It isn’t at the top of that list, but it’s written in React and we really like it.</p>\n<p>Once you’ve done that, here’s how easy it is to deploy a new site with Netlify.</p>\n<p>First off, connect it to your GitHub repo:</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/netlify/netlify-gitprovider.png\">\n<p>In the Netlify console, click “Create a new site”:</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/netlify/netlify-newsite.png\">\n<p>Then “OAuth with Git”:</p>\n<img width=\"500\" align=\"middle\" src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/netlify/netlify-oauth.png\">\n<p>Search for the repository you want to deploy:</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/netlify/netlify-choosesite.png\">\n<p>Build it with <code class=\"language-text\">npm run build</code>:</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/netlify/netlify-sitedashboard.png\">\n<p>AND! (jazz hands) Your site is deployed!</p>\n<h2>Merging pull requests: builds and previews</h2>\n<p>As you submit new pull requests and update your site, Netlify can automatically trigger new builds on your behalf.</p>\n<p>On the <a href=\"https://serverless.com\">Serverless.com</a> site, when we create a new branch, Netlify pings us with a GitHub comment on that branch to generate a build preview URL for us:</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/netlify/deploy+preview+comment.png\">\n<p>We use these build previews a lot to share in-progress designs and content across teams.</p>\n<p>Once it’s good to go, we merge to master and Netlify triggers a new build.</p>\n<h2>Setting up deployment notifications</h2>\n<p>We have a dedicated Slack channel for Netlify build notifications.</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/netlify/netlify+slack+channel.png\">\n<p>This way, we can quickly see when builds succeed or fail, and also access all our latest deploy previews in one spot:</p>\n<h1>Now—build your own static serverless site!</h1>\n<p>Are you a true believer now? Do you want to build your own statically hosted serverless site?</p>\n<p>Boy, do we have the resources for you!</p>\n<p>We wrote a previous blog post about <a href=\"https://serverless.com/blog/how-to-create-a-fast-secure-and-scalable-open-source-blog-with-react-markdown/\">why and how we built a fast, secure, scalable static site with React</a>, so you can check that out for more background.</p>\n<p>We’ve also open-sourced everything for the Serverless.com site:</p>\n<ul>\n<li>Here’s our <a href=\"https://github.com/serverless/site/tree/master/src\">frontend code</a></li>\n<li>Here’s our <a href=\"https://github.com/serverless/site/tree/master/backend\">backend code</a> (complete with a host of slick serverless functions you can peruse)</li>\n</ul>\n<p>Maybe we’re biased, but we think static serverless sites are the best. Give em a try, and happy building!</p>","frontmatter":{"title":"How to build a static Serverless site with Netlify","date":"December 18, 2017","description":"How Serverless.com manages their static, serverless website with Netlify and the Serverless Framework."}}},"pageContext":{"slug":"/posts/2017-12-18-how-built-static-serverless-website-netlify/","previous":{"fields":{"slug":"/posts/2017-12-14-building-testing-alexa-skill-bespoken-plugin/"},"frontmatter":{"title":"Building & testing an Alexa skill with the Serverless Bespoken plugin"}},"next":{"fields":{"slug":"/posts/2017-12-20-state-of-serverless-observability-why-we-built-thundra/"},"frontmatter":{"title":"The state of serverless observability—why we built Thundra"}}}}}