{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2020-05-22-serverless-azure-functions-v2/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"04a78b30-35e6-57b2-bbdd-7db8194ba9a2","excerpt":"V2 Release We’re excited to announce the official v2 release of the Serverless Azure Functions plugin for the Serverless Framework. This version includes some…","html":"<h4>V2 Release</h4>\n<p>We’re excited to announce the official v2 release of the <a href=\"https://github.com/serverless/serverless-azure-functions\">Serverless Azure Functions plugin</a> for the Serverless Framework. This version includes some exciting new features and fixes which we think will both simplify your development experience and enable you to do more with Azure Functions.</p>\n<p>Feel free to check out our <a href=\"https://github.com/serverless/serverless-azure-functions/blob/master/CHANGELOG.md\">full changelog</a>, but here are the highlights:</p>\n<ul>\n<li>Linux Support</li>\n<li>Python Support</li>\n<li>.NET Core Support</li>\n<li>Simplified runtime configuration</li>\n<li>No more <code class=\"language-text\">x-azure-settings</code> (still backwards compatible)</li>\n<li>Automated integration tests</li>\n<li>Invoke the APIM endpoint</li>\n<li><code class=\"language-text\">sls info</code> and <code class=\"language-text\">sls deploy --dryrun</code></li>\n<li>Configurable logging verbosity</li>\n<li>Resource group tagging</li>\n</ul>\n<h5>Linux Support</h5>\n<p>You can now deploy a Linux function app with the following flag in your configuration:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">os</span><span class=\"token punctuation\">:</span> linux\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>The default <code class=\"language-text\">os</code> is still <code class=\"language-text\">windows</code> for all Function Apps (except Python, which does not allow Windows Function Apps).</p>\n<h5>Python Support</h5>\n<p>The <a href=\"https://github.com/serverless/serverless/tree/master/lib/plugins/create/templates/azure-python\">updated Python template</a> is now included in the Serverless Framework. Simply run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ sls create -t azure-python -p <span class=\"token punctuation\">{</span>your-app-name<span class=\"token punctuation\">}</span></code></pre></div>\n<p>A mentioned above, Python Function Apps can <em>only</em> run on Linux, so if you’re deploying a Python Function App, you’ll be forced into using Linux, regardless of your specification in <code class=\"language-text\">serverless.yml</code>.</p>\n<p>We <em>highly</em> recommend creating a virtual environment in your local development and make sure you add the name of your environment to the <code class=\"language-text\">exclude</code> section within <code class=\"language-text\">serverless.yml</code>.</p>\n<h5>.NET Core Support</h5>\n<p>In order to deploy a .NET Core Function app via the Serverless Framework, you also need to have the <a href=\"https://docs.microsoft.com/en-us/dotnet/core/tools/\">.NET Core CLI</a> installed. The <code class=\"language-text\">package</code> lifecycle event invokes the <code class=\"language-text\">dotnet build</code> command to compile the function app.</p>\n<h5>Simplified Runtime Configuration</h5>\n<p>Rather than pinning to a specific patch/minor version of Node, and trying to determine if that version is supported by Azure Functions, we simplified the <code class=\"language-text\">provider.runtime</code> property. Here are the valid values:</p>\n<ul>\n<li><code class=\"language-text\">nodejs10</code></li>\n<li><code class=\"language-text\">nodejs12</code></li>\n<li><code class=\"language-text\">python3.6</code></li>\n<li><code class=\"language-text\">python3.7</code></li>\n<li><code class=\"language-text\">python3.8</code></li>\n<li><code class=\"language-text\">dotnet2.2</code></li>\n<li><code class=\"language-text\">dotnet3.1</code></li>\n</ul>\n<p>This is the recommended approach from the Azure Functions team as well.</p>\n<h5>No more <code class=\"language-text\">x-azure-settings</code></h5>\n<p>The feature you’ve all been waiting for… We’ve flattened out the <code class=\"language-text\">function</code> configuration so that it no longer needs the <code class=\"language-text\">x-azure-settings</code> object to build the function bindings.</p>\n<h6>Before</h6>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hello</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> hello.sayHello\n    <span class=\"token key atrule\">events</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">x-azure-settings</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">methods</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> GET\n          <span class=\"token key atrule\">authLevel</span><span class=\"token punctuation\">:</span> anonymous</code></pre></div>\n<h6>After</h6>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hello</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> hello.sayHello\n    <span class=\"token key atrule\">events</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">methods</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> GET\n        <span class=\"token key atrule\">authLevel</span><span class=\"token punctuation\">:</span> anonymous</code></pre></div>\n<p>We did, however, make this backwards compatible, so you can still use <code class=\"language-text\">x-azure-functions</code> if you want to for some reason. No judgments here.</p>\n<h5>Automated Integration Tests</h5>\n<p>Since we added support for two new runtime languages and an additional operating system, our ability to manually test deployment possibilities was quickly diminishing. We are using <a href=\"https://www.npmjs.com/package/clvr\">Clover</a> to automate the deployment, invocation and cleanup of function apps, as well as make assertions on the output of the commands. These integration tests are on a timer that runs twice a day, and runs in a GitHub workflow on the plugin repo.</p>\n<p>Here are links to our workflows for <a href=\"https://github.com/serverless/serverless-azure-functions/actions?query=workflow%3A%22.NET+Integration+Tests%22\">.NET</a>, <a href=\"https://github.com/serverless/serverless-azure-functions/actions?query=workflow%3A%22Python+Integration+Tests%22\">Python</a> and <a href=\"https://github.com/serverless/serverless-azure-functions/actions?query=workflow%3A%22Node+Integration+Tests%22\">Node</a> integration tests.</p>\n<h5>Invoke API Management Endpoint</h5>\n<p>The plugin allows for a deployment of an API Management instance, and previously, you’d have to copy/paste into Postman or your browser to test the APIM endpoint. Now, you can simply invoke it directly via the CLI by running:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ sls invoke apim -f <span class=\"token operator\">&lt;</span>function<span class=\"token operator\">></span> <span class=\"token punctuation\">..</span>.</code></pre></div>\n<h5>Info Command</h5>\n<p>The <code class=\"language-text\">info</code> command is a way to view a quick summary of your <strong>deployed</strong> resources. Run</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ sls info</code></pre></div>\n<p>and you’ll see something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Resource Group Name: &lt;resource-group-name&gt;\nFunction App Name: &lt;function-app-name&gt;\nFunctions:\n        hello\n        goodbye\nAzure Resources:\n{\n  &quot;name&quot;: &quot;&lt;function-app-name&gt;&quot;,\n  &quot;resourceType&quot;: &quot;Microsoft.Web/sites&quot;,\n  &quot;region&quot;: &quot;westeurope&quot;\n},\n{\n  &quot;name&quot;: &quot;&lt;app-insights-name&gt;&quot;,\n  &quot;resourceType&quot;: &quot;microsoft.insights/components&quot;,\n  &quot;region&quot;: &quot;westeurope&quot;\n},\n{\n  &quot;name&quot;: &quot;&lt;storage-account-name&gt;&quot;,\n  &quot;resourceType&quot;: &quot;Microsoft.Storage/storageAccounts&quot;,\n  &quot;region&quot;: &quot;westeurope&quot;\n}</code></pre></div>\n<h5>Dry-run Deployments</h5>\n<p>Similar to the <code class=\"language-text\">info</code> command, we wanted a way for you to get info on what the deployment <em>will</em> be like. We added the <code class=\"language-text\">--dryrun</code> option to the <code class=\"language-text\">deploy</code> command so tha tyou can take a look at the Azure resources that will be deployed with the current configuration. Run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ sls deploy --dryrun</code></pre></div>\n<p>and you’ll see the exact same format as the <code class=\"language-text\">info</code> output, but based on what your current configuration would generate.</p>\n<h5>Tagging Resource Group</h5>\n<p>Resource group tags can be an important part of Azure governance. Previously, any deployment would overwrite any tags that existed on the resource group. Now, the deployment will check if any tags exist as well as add any that were included in <code class=\"language-text\">serverless.yml</code>, which can be included like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">...</span>\n<span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">TAG_1</span><span class=\"token punctuation\">:</span> tagValue1\n    <span class=\"token key atrule\">TAG_2</span><span class=\"token punctuation\">:</span> tagValue2</code></pre></div>\n<h5>Conclusion</h5>\n<p>Thank you to the many of you that have used the plugin, provided valuable feedback and even pull requests back to the repo. Feel free to reach out with any questions, issues or feature requests by <a href=\"https://github.com/serverless/serverless-azure-functions/issues/new/choose\">posting an issue</a>. Until next time ⚡</p>","frontmatter":{"title":"Serverless Azure Functions V2 - Linux, Python & .NET Core Support","date":"June 03, 2020","description":"Introducing the v2 release of the Serverless Azure Functions plugin, which includes support for Linux, Python & .NET Core Function Apps."}}},"pageContext":{"slug":"/posts/2020-05-22-serverless-azure-functions-v2/","previous":{"fields":{"slug":"/posts/2020-05-26-serverless-express-apis-aws-lambda-http-api/"},"frontmatter":{"title":"Serverless Express – Easy APIs On AWS Lambda & AWS HTTP API"}},"next":{"fields":{"slug":"/posts/contribute/"},"frontmatter":{"title":"Contributing Guest Posts"}}}}}