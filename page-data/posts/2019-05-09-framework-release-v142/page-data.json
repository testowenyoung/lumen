{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2019-05-09-framework-release-v142/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"f4bdbce6-efc6-5ae5-b38e-e6466b98184b","excerpt":"It is now easier to build even more robust APIs using the Serverless Framework. The Serverless Framework v1.42.0 release adds support for REST API access logs…","html":"<p>It is now easier to build even more robust APIs using the Serverless Framework. The Serverless Framework v1.42.0 release adds support for REST API access logs and API Gateway binary media type responses. Furthermore it’s now possible to set API Gateway request body validations and API key values.\nIn addition to that we also addressed bug fixes and enhancements. 3 bug fixes and 7 enhancements were merged\nand are now available in our v1.42.0 release.</p>\n<h3>API Gateway REST API logs</h3>\n<p>Operating a serverless REST service at scale requires access to logs in order to gain insights into the API\nusage and potential issues the current setup might run into.</p>\n<p>With Serverless Framework v1.42.0 it’s easy to enable API access logs. Just set the corresponding value on the\n<code class=\"language-text\">provider</code> config level like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">logs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">restApi</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<p>After a redeploy you should see a dedicated log group where all your services API requests will be logged.</p>\n<p>Note that we’re planning to roll out some more fine grained configurability for API Gateway access logs.\nFeel free to join our discussion about potential enhancements\n<a href=\"https://github.com/serverless/serverless/issues/6094\">in this issue</a>.</p>\n<h3>Binary Media Type responses</h3>\n<p>Sometimes it’s a product requirement to not just support text-based REST APIs. What if a customer should be able\nto download .pdf invoices, .xlsx spreadsheets or you want to be able to return images based on API requests.</p>\n<p>With Serverless Framework v1.42.0 it’s now possible to support a range of different Binary Media Types.</p>\n<p>Enabling support for API Gateway binary responses is as easy as configuring the corresponding property on the\n<code class=\"language-text\">provider</code> level:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGateway</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">binaryMediaTypes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'*/*'</span></code></pre></div>\n<p>You could use the wildcard setup (as shown above) to allow all binary media types. Additionally you can\nspecify which files you’ll return by using the following config:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGateway</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">binaryMediaTypes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'image/png'</span>\n      <span class=\"token punctuation\">-</span> ‘image/jpeg’</code></pre></div>\n<p>Note that you might also want to make sure to return the correct <code class=\"language-text\">Content-Type</code> header and (e.g. base64) encoded\nbody in your Lambda response.</p>\n<h3>Request body validation</h3>\n<p>Validations are useful to stop processing malformed requests early on. Having support for such checks on the API\nlevel is beneficial because it makes it possible to reject invalid requests at an early stage without the need to\ngo all the way through until the request hits the Lamdba function which will reject it anyway.</p>\n<p>Using the <code class=\"language-text\">http</code> event one can now configure request body validations which are JSON documents used by API Gateway\nto filter incoming API requests.</p>\n<p>Setting request body validations is best done by creating a <code class=\"language-text\">.json</code> file with the definition of the validation. Currently, API Gateway only supports draft-04 compliant schemas. Here is an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"definitions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"$schema\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://json-schema.org/draft-04/schema#\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The Root Schema\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"required\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"username\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"username\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The Foo Schema\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"default\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"pattern\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^[a-zA-Z0-9]+$\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>After that you just need to point to that file in your <code class=\"language-text\">http</code> request schema configuration:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hello</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> handler.hello\n    <span class=\"token key atrule\">events</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> users/create\n          <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> post\n          <span class=\"token key atrule\">request</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">schema</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">application/json</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>file(create_request.json)<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Note that you can also inline your JSON validation definition, however it’s often easier to just reference a\nfile on your filesystem.</p>\n<h3>API Key values</h3>\n<p>Controlling access to your API Gateway is best done by leveraging usage plans and API Keys. The Serverless Framework\nalready supports both via the <code class=\"language-text\">apiKeys</code> and <code class=\"language-text\">usagePlan</code> configs.</p>\n<p>When using such configurations API Gateway took care of the API Key value generation.</p>\n<p>The Serverless Framework v1.42.0 adds support to control such values, making it easier and more deterministic to\ngenerate and hand out API keys to users.</p>\n<p>Here’s an example that shows how API keys and usage plans can be used with the new Serverless Framework version:</p>\n<h4>API key value definitions without usage plans</h4>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiKeys</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> original <span class=\"token comment\"># original format</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> new<span class=\"token punctuation\">-</span>key<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>value <span class=\"token comment\"># name and value</span>\n      <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> apikeyvalueapikeyvalue\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> only<span class=\"token punctuation\">-</span>name <span class=\"token comment\"># only name</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> onlyvalueonlyvalueonlyvalue <span class=\"token comment\"># only value</span>\n      <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> description for the api key</code></pre></div>\n<h4>API key value definitions with usage plans</h4>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiKeys</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">free</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> original <span class=\"token comment\"># original format</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> new<span class=\"token punctuation\">-</span>key<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>value <span class=\"token comment\"># name and value</span>\n        <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> apikeyvalueapikeyvalue\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> only<span class=\"token punctuation\">-</span>name <span class=\"token comment\"># only name</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> onlyvalueonlyvalueonlyvalue <span class=\"token comment\"># only value</span>\n        <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> Api key for $<span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">:</span>provider.stage<span class=\"token punctuation\">}</span> stage\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">paid</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> original<span class=\"token punctuation\">-</span>paid\n  <span class=\"token key atrule\">usagePlan</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">free</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">quota</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n          <span class=\"token key atrule\">offset</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n          <span class=\"token key atrule\">period</span><span class=\"token punctuation\">:</span> MONTH\n        <span class=\"token key atrule\">throttle</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">burstLimit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span>\n          <span class=\"token key atrule\">rateLimit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">paid</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">quota</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n          <span class=\"token key atrule\">offset</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n          <span class=\"token key atrule\">period</span><span class=\"token punctuation\">:</span> MONTH\n        <span class=\"token key atrule\">throttle</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">burstLimit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span>\n          <span class=\"token key atrule\">rateLimit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span></code></pre></div>\n<h4>Bug Fixes</h4>\n<ul>\n<li><a href=\"https://github.com/serverless/serverless/pull/5952\">#5952</a> Support setting both proxy and ca file for awsprovider AWS config agent<a href=\"https://github.com/serverless/serverless/pull/5952/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+20</span>/<span style=\"color:#cb2431\">-4</span></a> <a href=\"https://github.com/snurmine\"> <img src=\"https://avatars0.githubusercontent.com/u/16050765?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> snurmine</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6040\">#6040</a> Remove safeguards when using API Gateway Stage resource settings<a href=\"https://github.com/serverless/serverless/pull/6040/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+2</span>/<span style=\"color:#cb2431\">-194</span></a> <a href=\"https://github.com/pmuens\"> <img src=\"https://avatars3.githubusercontent.com/u/1606004?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> pmuens</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6042\">#6042</a> Merging v1.41.1 changes back into master<a href=\"https://github.com/serverless/serverless/pull/6042/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+12</span>/<span style=\"color:#cb2431\">-200</span></a> <a href=\"https://github.com/pmuens\"> <img src=\"https://avatars3.githubusercontent.com/u/1606004?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> pmuens</a></li>\n</ul>\n<h4>Enhancements</h4>\n<ul>\n<li><a href=\"https://github.com/serverless/serverless/pull/6026\">#6026</a> Use region pseudo parameter<a href=\"https://github.com/serverless/serverless/pull/6026/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+19</span>/<span style=\"color:#cb2431\">-7</span></a> <a href=\"https://github.com/daaru00\"> <img src=\"https://avatars1.githubusercontent.com/u/8782994?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> daaru00</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6038\">#6038</a> Add more specific sub command error handling<a href=\"https://github.com/serverless/serverless/pull/6038/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+115</span>/<span style=\"color:#cb2431\">-0</span></a> <a href=\"https://github.com/TylerSustare\"> <img src=\"https://avatars1.githubusercontent.com/u/10850753?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> TylerSustare</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6043\">#6043</a> Support wildcard in API Gateway cors domains<a href=\"https://github.com/serverless/serverless/pull/6043/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+23</span>/<span style=\"color:#cb2431\">-5</span></a> <a href=\"https://github.com/tdmartino\"> <img src=\"https://avatars0.githubusercontent.com/u/20191850?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> tdmartino</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6064\">#6064</a> Allow Fn::Join in stream event arns<a href=\"https://github.com/serverless/serverless/pull/6064/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+93</span>/<span style=\"color:#cb2431\">-33</span></a> <a href=\"https://github.com/Tybot204\"> <img src=\"https://avatars3.githubusercontent.com/u/7002601?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> Tybot204</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6070\">#6070</a> Highlight skipping of deployments<a href=\"https://github.com/serverless/serverless/pull/6070/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+72</span>/<span style=\"color:#cb2431\">-3</span></a> <a href=\"https://github.com/pmuens\"> <img src=\"https://avatars3.githubusercontent.com/u/1606004?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> pmuens</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6079\">#6079</a> Improve integration test of aws-scala-sbt<a href=\"https://github.com/serverless/serverless/pull/6079/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+1</span>/<span style=\"color:#cb2431\">-1</span></a> <a href=\"https://github.com/NomadBlacky\"> <img src=\"https://avatars2.githubusercontent.com/u/3215961?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> NomadBlacky</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6084\">#6084</a> SDK based API Gateway Stage updates<a href=\"https://github.com/serverless/serverless/pull/6084/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+565</span>/<span style=\"color:#cb2431\">-73</span></a> <a href=\"https://github.com/pmuens\"> <img src=\"https://avatars3.githubusercontent.com/u/1606004?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> pmuens</a></li>\n</ul>\n<h4>Documentation</h4>\n<ul>\n<li><a href=\"https://github.com/serverless/serverless/pull/6027\">#6027</a> Update cors.md<a href=\"https://github.com/serverless/serverless/pull/6027/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+3</span>/<span style=\"color:#cb2431\">-3</span></a> <a href=\"https://github.com/fabiorogeriosj\"> <img src=\"https://avatars3.githubusercontent.com/u/1442874?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> fabiorogeriosj</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6052\">#6052</a> Fix doc: How to update serverless<a href=\"https://github.com/serverless/serverless/pull/6052/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+1</span>/<span style=\"color:#cb2431\">-1</span></a> <a href=\"https://github.com/maplain\"> <img src=\"https://avatars2.githubusercontent.com/u/2901728?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> maplain</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6061\">#6061</a> Update event.md<a href=\"https://github.com/serverless/serverless/pull/6061/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+1</span>/<span style=\"color:#cb2431\">-1</span></a> <a href=\"https://github.com/PatNeedham\"> <img src=\"https://avatars0.githubusercontent.com/u/967811?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> PatNeedham</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6068\">#6068</a> Fix markup error with Authentication value<a href=\"https://github.com/serverless/serverless/pull/6068/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+1</span>/<span style=\"color:#cb2431\">-1</span></a> <a href=\"https://github.com/rakeshyoga\"> <img src=\"https://avatars3.githubusercontent.com/u/6423647?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> rakeshyoga</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6075\">#6075</a> Drop duplicate paragraph in aws/guide/credentials<a href=\"https://github.com/serverless/serverless/pull/6075/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+0</span>/<span style=\"color:#cb2431\">-3</span></a> <a href=\"https://github.com/bfred-it\"> <img src=\"https://avatars3.githubusercontent.com/u/1402241?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> bfred-it</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6085\">#6085</a> Update serverless.yml.md<a href=\"https://github.com/serverless/serverless/pull/6085/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+2</span>/<span style=\"color:#cb2431\">-0</span></a> <a href=\"https://github.com/marcinhou\"> <img src=\"https://avatars2.githubusercontent.com/u/4211616?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> marcinhou</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6092\">#6092</a> Fixed three small typos in doc<a href=\"https://github.com/serverless/serverless/pull/6092/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+4</span>/<span style=\"color:#cb2431\">-4</span></a> <a href=\"https://github.com/0xflotus\"> <img src=\"https://avatars3.githubusercontent.com/u/26602940?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> 0xflotus</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6093\">#6093</a> fixed small errors in spotinst docs<a href=\"https://github.com/serverless/serverless/pull/6093/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+6</span>/<span style=\"color:#cb2431\">-6</span></a> <a href=\"https://github.com/0xflotus\"> <img src=\"https://avatars3.githubusercontent.com/u/26602940?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> 0xflotus</a></li>\n</ul>\n<h4>Features</h4>\n<ul>\n<li><a href=\"https://github.com/serverless/serverless/pull/5956\">#5956</a> AWS API Gateway request body validation<a href=\"https://github.com/serverless/serverless/pull/5956/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+157</span>/<span style=\"color:#cb2431\">-1</span></a> <a href=\"https://github.com/dschep\"> <img src=\"https://avatars0.githubusercontent.com/u/667763?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> dschep</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/5982\">#5982</a> Enable Setting Amazon API Gateway API Key Value<a href=\"https://github.com/serverless/serverless/pull/5982/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+306</span>/<span style=\"color:#cb2431\">-465</span></a> <a href=\"https://github.com/laardee\"> <img src=\"https://avatars1.githubusercontent.com/u/4726921?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> laardee</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6000\">#6000</a> Add authorization scopes support for cognito user pool integration<a href=\"https://github.com/serverless/serverless/pull/6000/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+29</span>/<span style=\"color:#cb2431\">-8</span></a> <a href=\"https://github.com/herebebogans\"> <img src=\"https://avatars1.githubusercontent.com/u/17776689?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> herebebogans</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6057\">#6057</a> Add support for API Gateway REST API Logs<a href=\"https://github.com/serverless/serverless/pull/6057/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+309</span>/<span style=\"color:#cb2431\">-20</span></a> <a href=\"https://github.com/pmuens\"> <img src=\"https://avatars3.githubusercontent.com/u/1606004?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> pmuens</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6063\">#6063</a> Add support for API Gateway Binary Media Types<a href=\"https://github.com/serverless/serverless/pull/6063/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+101</span>/<span style=\"color:#cb2431\">-63</span></a> <a href=\"https://github.com/pmuens\"> <img src=\"https://avatars3.githubusercontent.com/u/1606004?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> pmuens</a></li>\n<li><a href=\"https://github.com/serverless/serverless/pull/6078\">#6078</a> Implement logging with Log4j2 for aws-scala-sbt<a href=\"https://github.com/serverless/serverless/pull/6078/files?utf8=✓&diff=split\" style=\"text-decoration:none;\"> <span style=\"color:#28a647\">+38</span>/<span style=\"color:#cb2431\">-7</span></a> <a href=\"https://github.com/NomadBlacky\"> <img src=\"https://avatars2.githubusercontent.com/u/3215961?v=4\" style=\"vertical-align: middle\" alt height=\"20px\"> NomadBlacky</a></li>\n</ul>\n<h3>Contributor thanks</h3>\n<p>Once again, big thanks to all involved who contribute to the Framework to make these releases a success.</p>","frontmatter":{"title":"Serverless Framework v1.42.0 -  API Gateway Logs, Binary Media Type Responses, Request Body Validations & More","date":"May 09, 2019","description":"Check out what’s included in Serverless Framework v1.42."}}},"pageContext":{"slug":"/posts/2019-05-09-framework-release-v142/","previous":{"fields":{"slug":"/posts/2019-04-30-framework-enterprise-error-insights/"},"frontmatter":{"title":"Serverless Framework Enterprise 0.9.0 - Error Insights"}},"next":{"fields":{"slug":"/posts/2019-05-14-s3-one-time-signed-url/"},"frontmatter":{"title":"Uploading objects to S3 using one-time pre signed URLs"}}}}}