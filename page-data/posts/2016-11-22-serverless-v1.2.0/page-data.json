{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2016-11-22-serverless-v1.2.0/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"f0334ae4-242b-5ad6-8291-0a27ec346630","excerpt":"Today we’re proud to announce the new version 1.2.0 of the Serverless Framework. Highlights of 1.2.0 Let’s take a look at the release highlights. You can find a…","html":"<p>Today we’re proud to announce the new version 1.2.0 of the Serverless Framework.</p>\n<h2>Highlights of 1.2.0</h2>\n<p>Let’s take a look at the release highlights. You can find a list of all the changes in the <a href=\"https://github.com/serverless/serverless/releases/tag/v1.2.0\">release changelog</a>.</p>\n<h3>Environment variables</h3>\n<p>AWS just added native support for environment variables inside of Lambda functions a few days ago.</p>\n<p>We’re proud to announce that Serverless v1.2 ships with support for native environment variables as well! You can define environment variables on a service- or function level.</p>\n<p>Here’s an example of what this looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># serverless.yml</span>\n\n<span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> aws\n  <span class=\"token key atrule\">runtime</span><span class=\"token punctuation\">:</span> nodejs4.3\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">envOne</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12345678</span>\n\n<span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">myFunction</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">envTwo</span><span class=\"token punctuation\">:</span> <span class=\"token number\">87654321</span></code></pre></div>\n<p>Environment variables can be even more useful if you use them together with Serverless Variables to reference dynamic values:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># serverless.yml</span>\n\n<span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">myFunction</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>file(../keys.yml)<span class=\"token punctuation\">:</span>apiKey<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>JavaScript Support for Serverless Variables</h3>\n<p>Serverless Variables now support raw JavaScript so that you can easily generate dynamic data. This makes the Serverless Variables even more powerful.</p>\n<p>Here’s a quick example that shows what this looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># serverless.yml</span>\n\n<span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">myFunction</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>file(./config.js)<span class=\"token punctuation\">:</span>fetchApiKey<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// config.js</span>\n\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">fetchApiKey</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// create / fetch dynamic data here (e.g. call an API)</span>\n   <span class=\"token keyword\">return</span> someApiKey<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Possible use cases for this could be the fetching of data from a REST API (e.g. secrets) or the generation of random variable data (e.g. for testing).</p>\n<h3>Include and Exclude for Packaging</h3>\n<p>Serverless recently introduced <code class=\"language-text\">globs</code> support for the <code class=\"language-text\">exclude</code> configuration.</p>\n<p>Negated <code class=\"language-text\">glob</code> patterns (e.g. <code class=\"language-text\">!some-file</code> or <code class=\"language-text\">!some-directory/**</code>) can be used to include files and directories back again.</p>\n<p>However, having the <code class=\"language-text\">include</code> configuration for this was way more convenient. 1.2.0 brings back <code class=\"language-text\">include</code> with <code class=\"language-text\">globs</code> support.</p>\n<p><strong>Note:</strong> Negated globs are still supported in both, <code class=\"language-text\">include</code> and <code class=\"language-text\">exclude</code>.</p>\n<h3>Limited Lambda Permissions</h3>\n<p>Lambda permissions for event sources (S3, SNS, etc.) are now bound to the resource, which should trigger the Lambda function rather than enabling all event sources of a certain type to call the Lambda function.</p>\n<p>This update tightens security and avoids unexpected behavior.</p>\n<p>It’s a change that will happen once you (re)deploy your service with Serverless 1.2 and will not introduce any breaking changes.</p>\n<h3>Refactorings and Bug Fixes</h3>\n<p>We’ve fixed a bunch of bugs (thanks for bringing them up!) and also started our process of <a href=\"https://github.com/serverless/serverless/issues/2645\">codebase refactorings</a> which will improve the whole onboarding process for new contributors.</p>\n<h3>Next Steps</h3>\n<p>We’ve already started filling in the next <a href=\"https://github.com/serverless/serverless/milestones\">milestones</a> for Serverless. Check out the <a href=\"https://github.com/serverless/serverless/milestone/17\">1.3 milestone</a> to preview what you can expect in two weeks.</p>\n<p>We hope that you have fun with the new release! Let us know if you have any questions or feedback in <a href=\"http://forum.serverless.com/\">our Forum</a> or <a href=\"https://github.com/serverless/serverless/issues\">Github Issues</a>.</p>\n<h3>Using Semver</h3>\n<p>Note that we’re using <a href=\"http://semver.org/\">strict Semver</a> for our Serverless Framework versioning. This way you’ll know when we introduce major features or breaking changes.</p>\n<h2>Serverless Examples</h2>\n<p>We’ve created a new repository called <a href=\"https://github.com/serverless/examples\">“examples”</a> which is a dedicated place for Serverless service examples. The goal is to showcase different scenarios using serverless architecture and the Serverless Framework.</p>\n<p>Feel free to contribute and add your example!</p>\n<h2>Serverless Dashboard</h2>\n<p>The <a href=\"https://github.com/serverless/dashboard\">Serverless Dashboard</a> desktop application is a project we’re working on to provide a user-friendly layer on top of the Serverless CLI.</p>\n<p>The goal of the dashboard is to help enhance the user experience for the Serverless Framework. The new dashboard allows you to deploy your service, invoke a function or view the function logs with a single click.</p>\n<p>You should definitely give it a spin! Please let us know what you think.</p>\n<h2>Serverless LA Meetup</h2>\n<p>On December 7th we’ll kick-off the <a href=\"https://www.meetup.com/Serverless-LA\">Serverless LA Meetup</a> series with interesting talks from Nick Gottlieb (Head of Customer Development at <a href=\"https://serverless.com\">Serverless, Inc.</a>) and Marc Campbell (CTO of <a href=\"https://www.replicated.com/\">Replicated</a>) about the Serverless Framework and serverless architectures. Join us if you’re in LA!</p>\n<h2>Serverless Survey</h2>\n<p>Your feedback is important in guiding the direction of the framework. Please take a few minutes and fill out <a href=\"https://docs.google.com/a/serverless.com/forms/d/1F7rRx01NMDmmLiDiEzc0iKGTlyEx1RrzItRvvoe6a4A/edit?usp=drive_web\">our survey</a> so that we can understand how you use the Serverless Framework and what your needs are.</p>","frontmatter":{"title":"Flexible Environment Variable Support for AWS Lambda - Serverless Framework V1.2","date":"November 22, 2016","description":"Environment variable support, optimized function packaging, per function IAM permissions, and new configuration options available in Serverless v1.2"}}},"pageContext":{"slug":"/posts/2016-11-22-serverless-v1.2.0/","previous":{"fields":{"slug":"/posts/2016-11-03-4-ways-to-secure-prevent-vulnerabilities-in-serverless-applications/"},"frontmatter":{"title":"4 Ways to Secure & Prevent Vulnerabilities in Serverless Applications using Snyk"}},"next":{"fields":{"slug":"/posts/2016-11-23-lessons-learned-on-building-awesome-developer-community/"},"frontmatter":{"title":"6 Lessons Learned on Building Awesome Developer Communities from CMX Summit"}}}}}