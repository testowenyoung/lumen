{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2017-11-01-avoid-parking-tickets-with-serverless/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"f6372703-245f-572d-ab49-b5807c676d0c","excerpt":"If you live in a city, then you are incredibly familiar with these three, terrifying little words: “street cleaning day.” The worst part about street cleaning…","html":"<p>If you live in a city, then you are incredibly familiar with these three, terrifying little words: “street cleaning day.”</p>\n<p>The worst part about street cleaning isn’t the morning you wake up at 6:00am, groggy, still in pajamas, and run barefoot into the cold streets. Oh no. The worst part is the morning you forget to. The morning where you innocently slide behind the driver’s seat to discover, nested under your windshiled wiper: another parking ticket.</p>\n<p>Well. Here is your chance to fight back.</p>\n<p>And learn a little Serverless development at the same time! Today, we’re going to make a super simple serverless parking reminder.</p>\n<h1>Set up the environment</h1>\n<p>We’re going to create a cron job that sends us an SMS the night before every street cleaning day.</p>\n<p>This example uses the <a href=\"https://serverless.com/framework/\">Serverless Framework</a>, AWS Lambda and Node.js. You can install the Framework with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g serverless</code></pre></div>\n<blockquote>\n<p><strong>Note:</strong> If you’ve never used these before, <a href=\"https://serverless.com/framework/docs/providers/aws/guide/quick-start/\">here is a handy guide</a> for getting everything set up on your machine. </p>\n</blockquote>\n<h1>Configure your Serverless service</h1>\n<p>Once we’re set up, we’ll need to configure our Serverless service. In my neighborhood, the street sweeper comes on each second and fourth Wednesday, and each second and fourth Friday. I’ll need to trigger a <code class=\"language-text\">schedule</code> event on each of those four days.</p>\n<p>Create a new directory. Then create a new <code class=\"language-text\">serverless.yml</code> file in your directory with the following configuration: </p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> parking<span class=\"token punctuation\">-</span>reminder\n\n<span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> aws\n  <span class=\"token key atrule\">runtime</span><span class=\"token punctuation\">:</span> nodejs6.10\n  <span class=\"token key atrule\">region</span><span class=\"token punctuation\">:</span> us<span class=\"token punctuation\">-</span>east<span class=\"token punctuation\">-</span><span class=\"token number\">1</span>\n\n<span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">parkingReminder</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> messenger.reminder\n    <span class=\"token key atrule\">events</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># triggers at 17:00 UTC on the second and fourth Wednesdays and Fridays. </span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span> cron(00 17 <span class=\"token punctuation\">?</span> * 4<span class=\"token comment\">#2 *)</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span> cron(00 17 <span class=\"token punctuation\">?</span> * 4<span class=\"token comment\">#4 *)</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span> cron(00 17 <span class=\"token punctuation\">?</span> * 6<span class=\"token comment\">#2 *)</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span> cron(00 17 <span class=\"token punctuation\">?</span> * 6<span class=\"token comment\">#4 *)</span></code></pre></div>\n<p>After giving our service a name and configuring the <code class=\"language-text\">provider</code> section, the key portion is in the <code class=\"language-text\">functions</code> block.</p>\n<p>We have one function configured, which we’ve named <code class=\"language-text\">parkingReminder</code>. It will invoke the <code class=\"language-text\">reminder</code> function in the <code class=\"language-text\">messenger.js</code> module, as noted by the <code class=\"language-text\">handler</code> property.</p>\n<p>Finally, we’ve configured four events to trigger this function. Each of the events is a <a href=\"https://serverless.com/framework/docs/providers/aws/events/schedule/\">schedule</a> event, meaning they’ll be invoked on a given schedule. In this example, I use cron syntax to list the four times on which I need my function to be invoked.</p>\n<blockquote>\n<p><strong>Note:</strong> AWS provides really some really useful expressions for describing your cron jobs. <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/tutorial-scheduled-events-schedule-expressions.html\">Full documentation is available here</a>.</p>\n</blockquote>\n<h1>Hooking into Twilio</h1>\n<p>Now, this service is only useful when it can actually send you a reminder. To do that, we’re going to use Twilio inside our Lambda function. (If you don’t have a <a href=\"https://www.twilio.com/sms\">Twilio account</a>, you can set one up for free.)</p>\n<p>Let’s create a <code class=\"language-text\">package.json</code> file, then install the Twilio SDK:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> twilio</code></pre></div>\n<p>Then, we’ll write our <code class=\"language-text\">reminder</code> function in the <code class=\"language-text\">messenger.js</code> module:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// messenger.js</span>\n\n<span class=\"token comment\">// Twilio Credentials </span>\n<span class=\"token keyword\">var</span> accountSid <span class=\"token operator\">=</span> <span class=\"token string\">'ACCOUNTID'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">var</span> authToken <span class=\"token operator\">=</span> <span class=\"token string\">'AUTHTOKEN'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//require the Twilio module </span>\n<span class=\"token keyword\">var</span> twilio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'twilio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">twilio</span><span class=\"token punctuation\">(</span>accountSid<span class=\"token punctuation\">,</span> authToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">reminder</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  client<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> \n    to<span class=\"token operator\">:</span> <span class=\"token string\">\"YOUR NUMBER\"</span><span class=\"token punctuation\">,</span> \n    <span class=\"token keyword\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TWILIO NUMBER\"</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> <span class=\"token string\">\"move your car! street sweeping!\"</span><span class=\"token punctuation\">,</span> \n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Pretty simple! I create a Twilio client, then use the client to send a message inside my <code class=\"language-text\">reminder</code> handler function.</p>\n<blockquote>\n<p>Note that I’ve stored my Twilio credentials directly in my handler file. You can do this for the testing stage as JavaScript variables in your <code class=\"language-text\">handler.js</code> file, but for production you’ll want to take more care with your credentials. Check out our post on <a href=\"https://serverless.com/blog/serverless-secrets-api-keys/\">managing secrets with Serverless</a> for different approaches.</p>\n</blockquote>\n<p>Let’s deploy our function to AWS:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ sls deploy</code></pre></div>\n<p>Now that it’s deployed, you can test out your functions by running <code class=\"language-text\">sls invoke --function functionName</code>.</p>\n<h1>And the cost? Basically free.</h1>\n<p>You can run this without paying anything. Lambda has a generous free tier, and Twilio offers a free trial. But even if you were paying full price, it would be dirt cheap.</p>\n<p>The example here would cost about $.0000002/month in Lambda fees and $.09/month in Twilio fees — much cheaper than the cost of a parking ticket!</p>\n<h1>See it on GitHub</h1>\n<p>You now have a serverless service for reminding you to move your car for street sweeping! </p>\n<p>Feel free to check out <a href=\"https://github.com/worldsoup/serverless-parking-reminder\">the complete working example up on GitHub.</a>.</p>","frontmatter":{"title":"How you can avoid parking tickets with a Serverless reminder","date":"October 30, 2017","description":"How to build a simple Serverless app that reminds you about street sweeping days in your neighborhood. Never get a parking ticket again!"}}},"pageContext":{"slug":"/posts/2017-11-01-avoid-parking-tickets-with-serverless/","previous":{"fields":{"slug":"/posts/2017-10-27-madhuri-yechuri-unikernels-event-driven-serverless-emit-2017/"},"frontmatter":{"title":"Madhuri Yechuri - unikernels and event-driven serverless platforms"}},"next":{"fields":{"slug":"/posts/2017-10-31-ajay-nair-good-citizen-event-driven-world-emit-2017/"},"frontmatter":{"title":"Ajay Nair - being a good citizen in an event-driven world"}}}}}