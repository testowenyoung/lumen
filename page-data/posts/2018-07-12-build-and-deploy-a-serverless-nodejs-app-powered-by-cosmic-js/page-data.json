{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2018-07-12-build-and-deploy-a-serverless-nodejs-app-powered-by-cosmic-js/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"333bb70b-84fa-57b8-a935-89fbc73204b4","excerpt":"Serverless application development is growing in popularity. And itâ€™s no surprise. Build apps, not infrastructure is an appealing proposition. With serverlessâ€¦","html":"<p>Serverless application development is growing in popularity. And itâ€™s no surprise. <em>Build apps, not infrastructure</em> is an appealing proposition. With serverless, you donâ€™t have to manage server infrastructure, you get infinite scalability, and you never have to pay for idle server time.</p>\n<p>And <a href=\"https://serverless.com/framework/\">the Serverless Framework</a> does one better: it further abstracts building serverless apps into a delightful developer experience. It helps you get a cloud function-powered app up and running, fast.</p>\n<p>In this tutorial, Iâ€™m going to show you how to get started with the <a href=\"https://github.com/cosmicjs/serverless-starter\">Cosmic JS Serverless Starter app</a> in a matter of minutes. And as a bonus, Iâ€™ll show you the steps to transform any Node.js app into an infinitely scalable Node.js Serverless App!</p>\n<p>Letâ€™s get started.</p>\n<h2>TL;DR</h2>\n<p><a href=\"https://github.com/cosmicjs/serverless-starter\">Check out the Cosmic JS Serverless Starter on GitHub</a>.</p>\n<h2>Install the Cosmic JS Serverless Starter</h2>\n<p>To install the Cosmic JS Serverless Starter, run the following commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i -g cosmic-cli\ncosmic login\ncosmic init serverless-starter</code></pre></div>\n<p>These commands do the following:</p>\n<ol>\n<li>Install the <a href=\"https://www.npmjs.com/package/cosmic-cli\">Cosmic CLI</a></li>\n<li><a href=\"https://cosmicjs.com\">Login to your Cosmic JS Account</a> (you may need to create a new Bucket, if so, itâ€™ll walk you through this ðŸ˜€)</li>\n<li>Download the <a href=\"https://github.com/cosmicjs/serverless-starter\">Serverless Starter</a> and import the demo content to your selected Bucket.</li>\n</ol>\n<p>Once itâ€™s downloaded, youâ€™ll be prompted to start the app with the following commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> serverless-starter\ncosmic develop\nYour application should now be running at http://localhost:3000</code></pre></div>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/cosmicjs/146a8fc0-8143-11e8-8bfa-139dde8f58ed-Screen%20Shot%202018-07-06%20at%2012.35.53%20PM.png\" alt=\"Serverless Node.js App\"></p>\n<h2>Get ready for lift off</h2>\n<p>Now that we have our application running locally, letâ€™s get ready to launch it to AWS cloud.</p>\n<p>First, weâ€™ll need to connect our AWS credentials. (<a href=\"https://serverless.com/framework/docs/providers/aws/guide/credentials/\">Hereâ€™s how you can find them</a>.)</p>\n<p>After youâ€™ve retrieved your AWS keys, run the following commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_ACCESS_KEY_ID</span><span class=\"token operator\">=</span>your-aws-key-id\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_SECRET_ACCESS_KEY</span><span class=\"token operator\">=</span>your-aws-secret-key</code></pre></div>\n<p>Weâ€™re all set to launch our Serverless Starter to AWS.  Run the following command to log in to the Serverless service and deploy your app:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i -g serverless\nserverless login\n<span class=\"token assign-left variable\">COSMIC_BUCKET</span><span class=\"token operator\">=</span>your-bucket-slug serverless deploy</code></pre></div>\n<p>The <code class=\"language-text\">serverless deploy</code> command does all the heavy lifting for us. It performs some magic behind the scenes with our AWS account, then once our app is available, it will provide the endpoints to find the deployed app.</p>\n<p>Adding the environment variable, <code class=\"language-text\">COSMIC_BUCKET</code>, connects our deployed app to our Cosmic JS Bucket via the Cosmic JS API.  This enables us to manage content for our newly deployed serverless app from the Cosmic JS Admin Dashboard.</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/cosmicjs/36d5f170-8144-11e8-8bfa-139dde8f58ed-Screen%20Shot%202018-07-06%20at%2012.43.48%20PM.png\" alt=\"Serverless Output\"></p>\n<p>From the output above, you can see the available endpoints where our Serverless app is now deployed.</p>\n<h2>Make any Node.js app Serverless-ready</h2>\n<p>So, we ran a few commands and pushed the Cosmic JS Serverless Starter app to AWS. Cool. But letâ€™s go a bit deeper.</p>\n<p>Weâ€™re going to take a look at (1) how we transformed the Node Starter app, and (2) how we can convert almost any Node.js app into a serverless app.</p>\n<h4>Edit <code class=\"language-text\">serverless.yml</code></h4>\n<p>To transform the Node Starter to a Serverless app, we had to create a serverless.yml file and set the config to handle dynamic routes.</p>\n<p>This is accomplished in the <code class=\"language-text\">function &gt; app &gt; events</code> area to indicate the dynamic http events. It looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># serverless.yml</span>\n\n<span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> cosmic<span class=\"token punctuation\">-</span>serverless\n\n<span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> aws\n  <span class=\"token key atrule\">runtime</span><span class=\"token punctuation\">:</span> nodejs6.10\n  <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> dev\n  <span class=\"token key atrule\">region</span><span class=\"token punctuation\">:</span> us<span class=\"token punctuation\">-</span>east<span class=\"token punctuation\">-</span><span class=\"token number\">1</span>\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">COSMIC_BUCKET</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>env<span class=\"token punctuation\">:</span>COSMIC_BUCKET<span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">COSMIC_READ_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>env<span class=\"token punctuation\">:</span>COSMIC_READ_KEY<span class=\"token punctuation\">}</span>\n\n<span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> app.handler\n    <span class=\"token key atrule\">events</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span> ANY /\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ANY {proxy+}'</span>\n<span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> serverless<span class=\"token punctuation\">-</span>offline</code></pre></div>\n<h4>Edit <code class=\"language-text\">app.js</code></h4>\n<p>Next, we needed to edit the entry point for the app, the <code class=\"language-text\">app.js</code> file, to export the main handler function. We also included the <a href=\"https://www.npmjs.com/package/serverless-http\">serverless-http node module</a> to wrap our Express app for Serverless use.</p>\n<p>Hereâ€™s the <code class=\"language-text\">app.js</code> file converted to serverless:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// app.js</span>\n<span class=\"token keyword\">const</span> serverless <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'serverless-http'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3000</span>\n<span class=\"token keyword\">const</span> Cosmic <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cosmicjs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> api <span class=\"token operator\">=</span> <span class=\"token function\">Cosmic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">COSMIC_BUCKET</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">COSMIC_BUCKET</span> <span class=\"token operator\">||</span> <span class=\"token string\">'node-starter'</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">COSMIC_READ_KEY</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">COSMIC_READ_KEY</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">let</span> stage_path <span class=\"token operator\">=</span> <span class=\"token string\">'dev/'</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">STAGE</span> <span class=\"token operator\">===</span> <span class=\"token string\">'local'</span><span class=\"token punctuation\">)</span>\n  stage_path <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">const</span> bucket <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">bucket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  slug<span class=\"token operator\">:</span> <span class=\"token constant\">COSMIC_BUCKET</span><span class=\"token punctuation\">,</span>\n  read_key<span class=\"token operator\">:</span> <span class=\"token constant\">COSMIC_READ_KEY</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'view engine'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ejs'</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/:slug?'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> slug <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>slug\n  <span class=\"token keyword\">const</span> year <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>slug<span class=\"token punctuation\">)</span>\n    slug <span class=\"token operator\">=</span> <span class=\"token string\">'home'</span>\n  bucket<span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> slug <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>object\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pages/default'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> stage_path <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Page not found'</span> <span class=\"token punctuation\">}</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pages/404'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> stage_path <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>handler <span class=\"token operator\">=</span> <span class=\"token function\">serverless</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>In Conclusion</h2>\n<p>With a few edits, you can quickly transform almost any Node.js app into a serverless app. The <a href=\"https://serverless.com/framework/\">Serverless Framework</a> abstracts the complexity of AWS account configuration, and gives you a delightful development experience.</p>\n<p>Add Cosmic JS-powered content, and you have an infinitely scalable serverless app with content managed via the Cosmic JS API.  No servers to manage, no CMS to maintain. Building apps, not infrastructure, is the future!</p>\n<p>If you have any comments or questions about building serverless apps with Cosmic JS, <a href=\"https://twitter.com/cosmic_js\">reach out to us on Twitter</a> and <a href=\"https://cosmicjs.com/community\">join the conversation with the Cosmic JS Community on Slack</a>.</p>","frontmatter":{"title":"Build and deploy a Serverless Node.js app powered by Cosmic JS","date":"July 12, 2018","description":"Get started with the Cosmic JS Serverless Starter app. Transform any Node.js app into an infinitely scalable Node.js Serverless app."}}},"pageContext":{"slug":"/posts/2018-07-12-build-and-deploy-a-serverless-nodejs-app-powered-by-cosmic-js/","previous":{"fields":{"slug":"/posts/2018-07-11-aws-lambda-sqs-serverless-integration/"},"frontmatter":{"title":"Using SQS with AWS Lambda and Serverless"}},"next":{"fields":{"slug":"/posts/2018-07-16-get-in-where-you-fit-in-inclusion-diversity-tech/"},"frontmatter":{"title":"Get in where you fit in: inclusion and diversity in tech"}}}}}