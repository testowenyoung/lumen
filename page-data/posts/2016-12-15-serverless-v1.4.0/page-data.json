{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2016-12-15-serverless-v1.4.0/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"310503ac-0619-5d00-86b8-76819160cbd1","excerpt":"We’re happy to release v1.4.0 of the Serverless Framework today! This release is packed with lots of great new features. Let’s take a look at the highlights…","html":"<p>We’re happy to release v1.4.0 of the Serverless Framework today!</p>\n<p>This release is packed with lots of great new features. Let’s take a look at the highlights!</p>\n<h2>Highlights of 1.4.0</h2>\n<p>Here are the highlights of this release. You can find a complete list of all the updates in the <a href=\"https://github.com/serverless/serverless/blob/master/CHANGELOG.md\">changelog</a>.</p>\n<h3>Alexa event support</h3>\n<p>v1.4 introduces a new event <code class=\"language-text\">alexaSkill</code> event source.</p>\n<p>You can now hook up your Lambdas with <code class=\"language-text\">alexaSkill</code> events like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hello</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> handler.hello\n    <span class=\"token key atrule\">events</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> alexaSkill</code></pre></div>\n<p>You can learn more about this new event source in <a href=\"https://serverless.com/framework/docs/providers/aws/events/alexa-skill\">the docs</a>. You can also check out examples for setting up your own Alexa skill for <a href=\"https://github.com/serverless/examples/tree/master/aws-node-alexa-skill\">Node.js</a> or <a href=\"https://github.com/serverless/examples/tree/master/aws-python-alexa-skill\">Python</a> in the Serverless Examples Repository.</p>\n<h3>C# service template</h3>\n<p>AWS introduced .NET core support for Lambda at re:Invent.</p>\n<p>Serverless has you covered and ships with the new <code class=\"language-text\">aws-csharp</code> template. You can use it to create C# services on AWS Lambda.</p>\n<p>Simply run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">serverless create --template aws-csharp</code></pre></div>\n<p>to create a new C# service.</p>\n<p>The <a href=\"https://serverless.com/framework/docs/providers/aws/examples/hello-world/csharp/\">C# “hello world” example</a> will show you how you can setup and deploy your C# service.</p>\n<p><strong>Note:</strong> Serverless supports all <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/current-supported-versions.html\">AWS Lambda runtimes</a> out of the box. You can change the runtime with the help of the <code class=\"language-text\">runtime</code> property in <a href=\"https://serverless.com/framework/docs/providers/aws/guide/serverless.yml/\"><code class=\"language-text\">serverless.yml</code> file</a>.</p>\n<h3>Directory support for service installation via GitHub URL</h3>\n<p>The <code class=\"language-text\">serverless install</code> command makes it possible for you to download services based on GitHub repository URLs. The downside was that only full repositories could be downloaded.</p>\n<p>Until now! A recent enhancement makes it possible to download specific directories from a GitHub URL.</p>\n<p>Want to play around with the REST API example which connects to a DynamoDB?</p>\n<p>Just install the service with the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">serverless <span class=\"token function\">install</span> --url https://github.com/serverless/examples/tree/master/aws-node-rest-api-with-dynamodb</code></pre></div>\n<h3>Service-wide metrics</h3>\n<p>v1.3 introduced service metrics support allowing you to get function metrics by running:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">serverless metrics --function hello</code></pre></div>\n<p>v1.4 enhances this command so that you can get service-wide metrics (all functions combined) when you run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">serverless metrics</code></pre></div>\n<h3>Stdin support for invoke</h3>\n<p><code class=\"language-text\">serverless invoke</code> and its local equivalent <code class=\"language-text\">serverless invoke local</code> are a great way to invoke your function to test its behavior.</p>\n<p>v1.4 now supports <strong>stdin</strong> so that you can pipe data directly into the <code class=\"language-text\">serverless invoke</code> call like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello world!\"</span> <span class=\"token operator\">|</span> serverless invoke --function hello --stage dev --region us-east-1</code></pre></div>\n<p>This provides way more flexibility to invoke a function with different data. Here’s an example of how a <code class=\"language-text\">dataGenerator.js</code> file could be used to generate data for your function:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node dataGenerator.js <span class=\"token operator\">|</span> serverless invoke <span class=\"token builtin class-name\">local</span> --function hello</code></pre></div>\n<h3>Enhancements, refactorings and bug fixes</h3>\n<p>As usual we’ve also pushed a bunch of enhacements, refactorings and bug fixes (thanks for reporting!) in this release.</p>\n<h3>Next Steps</h3>\n<p>We’ve already started filling in the next <a href=\"https://github.com/serverless/serverless/milestones\">milestones</a>. Check out the <a href=\"https://github.com/serverless/serverless/milestone/20\">1.5 milestone</a> to see what you can expect in two weeks.</p>\n<p>We hope that you have fun with the new release! Let us know if you have any questions or feedback in <a href=\"http://forum.serverless.com/\">our Forum</a> or <a href=\"https://github.com/serverless/serverless/issues\">GitHub Issues</a>.</p>\n<p>The <a href=\"https://github.com/serverless/examples\">Serverless Examples Repository</a> is an excellent resource if you want to explore some real world examples and learn more about what Serverless architectures look like.</p>\n<h3>Using Semver</h3>\n<p>Note that we’re using <a href=\"http://semver.org/\">strict Semver</a> for our Serverless Framework versioning. This way you’ll know when we introduce major features or breaking changes.</p>","frontmatter":{"title":"C# service template, Alexa event support, service-wide metrics in Serverless Framework v1.4","date":"December 15, 2016","description":"Introducing C# service template, Alexa event support, service-wide metrics & more in Serverless Framework v1.4"}}},"pageContext":{"slug":"/posts/2016-12-15-serverless-v1.4.0/","previous":{"fields":{"slug":"/posts/2016-12-07-how-to-create-a-fast-secure-and-scalable-open-source-blog-with-react-markdown/"},"frontmatter":{"title":"How to Create a Fast, Secure, and Scalable Open Source Blog with React + Markdown"}},"next":{"fields":{"slug":"/posts/2016-12-15-serverless-office-hours-recap/"},"frontmatter":{"title":"Talking re:Invent & the Latest Serverless Framework Features in the Dec. 8th Office Hours Live Video Recording"}}}}}