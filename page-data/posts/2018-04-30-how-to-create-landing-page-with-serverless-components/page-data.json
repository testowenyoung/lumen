{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2018-04-30-how-to-create-landing-page-with-serverless-components/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"ed18d498-f2c6-564e-99ae-3e78e003475e","excerpt":"Update: This post is based on the beta version of Serverless Components, which is not compatible with the latest, and much faster, GA version. Please check out‚Ä¶","html":"<blockquote>\n<p><strong>Update:</strong> This post is based on the beta version of Serverless Components, which is not compatible with the latest, and much faster, GA version. Please check out the <a href=\"https://github.com/serverless/components\">latest docs</a> for more up to date information.</p>\n</blockquote>\n<p><a href=\"https://github.com/serverless/components\">Serverless Components</a> are a new way of composing together smaller bits of functionality into larger applications.</p>\n<p><strong>Note:</strong> If you aren‚Äôt familiar with Serverless Components yet, <a href=\"https://serverless.com/blog/what-are-serverless-components-how-use/\">here‚Äôs a quick explainer</a>.</p>\n<p>In this tutorial, we are going to walk through building a landing page with the serverless Netlify and Lambda components.</p>\n<p>The three components we are using are:</p>\n<ol>\n<li>The Netlify site component</li>\n<li>The AWS Lambda component talking to the Mailchimp API</li>\n<li>The Rest API component, which uses API Gateway under the hood</li>\n</ol>\n<p>Let‚Äôs dive into it and cover:</p>\n<ul>\n<li>\n<p><a href=\"#composing-components\">Composing Components</a></p>\n<ul>\n<li><a href=\"#1-adding-netlify-site\">Adding Netlify Site</a></li>\n<li><a href=\"#2-adding-the-lambda-function-for-sign-up\">Adding the Lambda function for sign up</a></li>\n<li><a href=\"#3-adding-the-rest-api-to-expose-lambda-function\">Adding the Rest API to expose Lambda function</a></li>\n<li><a href=\"#4-expose-the-api-endpoint-to-the-netlify-site\">Expose the API endpoint to the Netlify site</a></li>\n</ul>\n</li>\n<li><a href=\"#deploy\">Deploy</a></li>\n<li><a href=\"#summary\">Summary</a></li>\n</ul>\n<h4>Getting started</h4>\n<ol>\n<li>\n<p>First you will need to install the Serverless Components via the <code class=\"language-text\">npm</code> <a href=\"https://www.npmjs.com/package/serverless-components\">package</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i serverless-components</code></pre></div>\n</li>\n<li>\n<p>Set your AWS credentials in your ENV vars:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_ACCESS_KEY_ID</span><span class=\"token operator\">=</span>my_access_key_id\n$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_SECRET_ACCESS_KEY</span><span class=\"token operator\">=</span>my_secret_access_key</code></pre></div>\n</li>\n</ol>\n<p><strong>Note:</strong> Make sure you have Node.js 8+ and <code class=\"language-text\">npm</code> installed on your machine.</p>\n<h4>Composing Components</h4>\n<p>This app is comprised of 3 parts: <code class=\"language-text\">aws-lambda</code>, <code class=\"language-text\">rest-api</code>, <code class=\"language-text\">netlify-site</code>.</p>\n<p>Let‚Äôs put them together.</p>\n<h5>1. Adding Netlify site</h5>\n<p>We are using Netlify to publish our landing page built with <code class=\"language-text\">create-react-app</code>.</p>\n<p>I chose Netlify over S3 for static hosting because it:</p>\n<ul>\n<li>Builds on github repo events (CI/CD flow)</li>\n<li>Has automatic branch previews on PRs</li>\n<li>Handles redirects out of box via <code class=\"language-text\">_redirects</code> file üëå</li>\n<li>Handles proxied URLs - this gives us escape hatches for dynamic pages/content</li>\n<li>Is insanely cheap</li>\n<li>Has amazing support to boot</li>\n</ul>\n<p>Okay, let‚Äôs get the component set up.</p>\n<p>In <code class=\"language-text\">serverless.yml</code> we need to define the components we are using under the <code class=\"language-text\">components</code> key.</p>\n<p>The inputs the <code class=\"language-text\">netlify-site</code> component need <a href=\"https://github.com/serverless/components/blob/738ec5d912d50d73f62ab94d0eeb3b634e792223/registry/netlify-site/README.md#input-types\">can be seen here</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> landing<span class=\"token punctuation\">-</span>page\n\n<span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">myNetlifySite</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> netlify<span class=\"token punctuation\">-</span>site\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">netlifyApiToken</span><span class=\"token punctuation\">:</span> abc\n      <span class=\"token key atrule\">githubApiToken</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123</span>\n      <span class=\"token key atrule\">siteName</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>awesome<span class=\"token punctuation\">-</span>site<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol.netlify.com\n      <span class=\"token key atrule\">siteDomain</span><span class=\"token punctuation\">:</span> testing<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol.com\n      <span class=\"token key atrule\">siteRepo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/serverless/netlify<span class=\"token punctuation\">-</span>landing<span class=\"token punctuation\">-</span>page\n      <span class=\"token key atrule\">siteBuildCommand</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token key atrule\">siteBuildDirectory</span><span class=\"token punctuation\">:</span> build\n      <span class=\"token key atrule\">siteRepoBranch</span><span class=\"token punctuation\">:</span> master\n      <span class=\"token key atrule\">siteRepoAllowedBranches</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> master</code></pre></div>\n<p>Let‚Äôs break that down.</p>\n<p><code class=\"language-text\">netlifyApiToken</code> is grabbed from your Netlify account at <a href=\"https://app.netlify.com/account/applications\">https://app.netlify.com/account/applications</a>, under ‚ÄúPersonal access tokens‚Äù. Replace <code class=\"language-text\">abc</code> with your valid Netlify token.</p>\n<p><img src=\"https://user-images.githubusercontent.com/35479789/38898738-b9bfef7a-424a-11e8-9c80-8fb147d36982.png\" alt=\"image\"></p>\n<hr>\n<p><code class=\"language-text\">githubApiToken</code> is setup in github at <a href=\"https://github.com/settings/tokens\">https://github.com/settings/tokens</a>, under ‚ÄúPersonal access tokens‚Äù. The token must have <code class=\"language-text\">admin:repo_hook</code> and <code class=\"language-text\">repo</code> access. Replace <code class=\"language-text\">123</code> with your valid github token.</p>\n<p><img src=\"https://user-images.githubusercontent.com/35479789/38898777-db507bb4-424a-11e8-975b-fd1554352045.png\" alt=\"image\"></p>\n<hr>\n<p><code class=\"language-text\">siteName</code> is the Netlify domain you will use for your site. Every site on Netlify lives on a unique Netlify subdomain until you mask it with your custom domain name. Change <code class=\"language-text\">my-awesome-site-lol-lol.netlify.com</code> to a unique address for your project.</p>\n<hr>\n<p><code class=\"language-text\">siteDomain</code> is the actual domain name of your site. You will need to configure a CNAME to point to Netlify. If you want to attach your own domain to this example, follow the <a href=\"https://www.netlify.com/docs/custom-domains/\">custom domain instructions</a>.</p>\n<hr>\n<p><code class=\"language-text\">siteRepo</code> is where your site code lives, and <strong>this one is important</strong>. You can use any type of site/app that you want in your repo, as long as you give Netlify the build command and where the built site is output. We are going to be using <code class=\"language-text\">create-react-app</code> to create a landing page.</p>\n<p>Our landing page code + repo can be seen <a href=\"https://github.com/serverless/netlify-landing-page/\">here</a>.</p>\n<hr>\n<p><code class=\"language-text\">siteBuildCommand</code> is the build command for <code class=\"language-text\">create-react-app</code>. It will compile our React app and output files into the <code class=\"language-text\">build</code> directory for us. This command will change based on your site/apps build process.</p>\n<hr>\n<p><code class=\"language-text\">siteBuildDirectory</code> for us is the <code class=\"language-text\">/build</code> directory. This is the default behavior of <code class=\"language-text\">create-react-app</code>.</p>\n<hr>\n<p><code class=\"language-text\">siteRepoBranch</code> will be the branch that triggers a rebuild of our site. Aka, when a change is merged into the <code class=\"language-text\">master</code> branch, Netlify will automagically rebuild and update our live site.</p>\n<hr>\n<p>You can deploy this as it is right now, with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ components deploy</code></pre></div>\n<p>If you go into Netlify and click into the newly-created site, you should see the live landing page URL:</p>\n<p><img src=\"https://user-images.githubusercontent.com/532272/38904159-a8b88c6a-425d-11e8-8db5-12939d666c4d.png\" alt=\"image\"></p>\n<h5>2. Adding the Lambda function for sign up</h5>\n<p>Now, we need to add a Lambda function to handle our form submissions.</p>\n<p>In <code class=\"language-text\">serverless.yml</code>, add the <code class=\"language-text\">aws-lambda</code> component to the <code class=\"language-text\">components</code> block:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">landingPageFunction</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>lambda\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> <span class=\"token number\">512</span>\n      <span class=\"token key atrule\">timeout</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> code/handler.landingPageFunction</code></pre></div>\n<p>Then, create the code for the Lambda function in a <code class=\"language-text\">code</code> directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> code\n<span class=\"token function\">touch</span> handler.js</code></pre></div>\n<p>Inside <code class=\"language-text\">handler.js</code>, add your Lambda code. The <code class=\"language-text\">code/handler.landingPageFunction</code> references the <code class=\"language-text\">hander.js</code> file with the exported <code class=\"language-text\">landingPageFunction</code> function:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'request'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> mailChimpAPI <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MAILCHIMP_API_KEY</span>\n<span class=\"token keyword\">const</span> mailChimpListID <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MAILCHIMP_LIST_ID</span>\n<span class=\"token keyword\">const</span> mcRegion <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MAILCHIMP_REGION</span>\n\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">landingPageFunction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Function ran!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> formData <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> email <span class=\"token operator\">=</span> formData<span class=\"token punctuation\">.</span>email\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>formData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No form data supplied'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>email<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No EMAIL supplied'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mailChimpListID<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No LIST_ID supplied'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    email_address<span class=\"token operator\">:</span> email<span class=\"token punctuation\">,</span>\n    status<span class=\"token operator\">:</span> <span class=\"token string\">'subscribed'</span><span class=\"token punctuation\">,</span>\n    merge_fields<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> subscriber <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'start to mailchimp'</span><span class=\"token punctuation\">,</span> subscriber<span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>mcRegion<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.api.mailchimp.com/3.0/lists/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>mailChimpListID<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/members</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> subscriber<span class=\"token punctuation\">,</span>\n    headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      Authorization<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">apikey </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>mailChimpAPI<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> body</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> bodyObj <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">&lt;</span> <span class=\"token number\">300</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>bodyObj<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">400</span> <span class=\"token operator\">&amp;&amp;</span> bodyObj<span class=\"token punctuation\">.</span>title <span class=\"token operator\">===</span> <span class=\"token string\">'Member Exists'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success added to list in mailchimp'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        statusCode<span class=\"token operator\">:</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span>\n        headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'Access-Control-Allow-Origin'</span><span class=\"token operator\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'Access-Control-Allow-Credentials'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        body<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          status<span class=\"token operator\">:</span> <span class=\"token string\">'saved email ‚äÇ‚óâ‚Äø‚óâ„Å§'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error from mailchimp'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, we need to expose the <code class=\"language-text\">env</code> variables for the function to consume.</p>\n<p>You can grab your Mailchimp API keys under ‚ÄúAccount > Extras‚Äù:</p>\n<p><img src=\"https://user-images.githubusercontent.com/532272/38901904-fa57ff0c-4252-11e8-90ff-373e8f78b35b.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/532272/38901981-4678acf6-4253-11e8-8819-eb312cf4aa0f.png\" alt=\"image\"></p>\n<p>Your Mailchimp list ID can be found under your list settings:</p>\n<p><img src=\"https://user-images.githubusercontent.com/532272/38902020-72c889a2-4253-11e8-9cf3-a4453e157638.png\" alt=\"image\"></p>\n<p>The region is up in the URL of your browser. In our case it‚Äôs <code class=\"language-text\">us11</code>.</p>\n<p>Let‚Äôs add these to the function:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">landingPageFunction</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>lambda\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> <span class=\"token number\">512</span>\n      <span class=\"token key atrule\">timeout</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> code/handler.landingPageFunction\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">MAILCHIMP_API_KEY</span><span class=\"token punctuation\">:</span> xyzabc123456<span class=\"token punctuation\">-</span>us11\n        <span class=\"token key atrule\">MAILCHIMP_LIST_ID</span><span class=\"token punctuation\">:</span> f95d7512fd\n        <span class=\"token key atrule\">MAILCHIMP_REGION</span><span class=\"token punctuation\">:</span> us11</code></pre></div>\n<p>Your full <code class=\"language-text\">serverless.yml</code> at this point should look like:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> landing<span class=\"token punctuation\">-</span>page\n\n<span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">landingPageFunction</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>lambda\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> <span class=\"token number\">512</span>\n      <span class=\"token key atrule\">timeout</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> code/handler.landingPageFunction\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">MAILCHIMP_API_KEY</span><span class=\"token punctuation\">:</span> xyzabc123456<span class=\"token punctuation\">-</span>us11\n        <span class=\"token key atrule\">MAILCHIMP_LIST_ID</span><span class=\"token punctuation\">:</span> f95d7512fd\n        <span class=\"token key atrule\">MAILCHIMP_REGION</span><span class=\"token punctuation\">:</span> us11\n  <span class=\"token key atrule\">myNetlifySite</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> netlify<span class=\"token punctuation\">-</span>site\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">netlifyApiToken</span><span class=\"token punctuation\">:</span> abc\n      <span class=\"token key atrule\">githubApiToken</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123</span>\n      <span class=\"token key atrule\">siteName</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>awesome<span class=\"token punctuation\">-</span>site<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol.netlify.com\n      <span class=\"token key atrule\">siteDomain</span><span class=\"token punctuation\">:</span> testing<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol.com\n      <span class=\"token key atrule\">siteRepo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/serverless/netlify<span class=\"token punctuation\">-</span>landing<span class=\"token punctuation\">-</span>page\n      <span class=\"token key atrule\">siteBuildCommand</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token key atrule\">siteBuildDirectory</span><span class=\"token punctuation\">:</span> build\n      <span class=\"token key atrule\">siteRepoBranch</span><span class=\"token punctuation\">:</span> master\n      <span class=\"token key atrule\">siteRepoAllowedBranches</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> master</code></pre></div>\n<h5>3. Adding the Rest API to expose Lambda function</h5>\n<p>So far, we have a landing page and a function. They aren‚Äôt connected in any way.</p>\n<p>We need to expose a live endpoint for the landing page to ping on form submissions.</p>\n<p>Let‚Äôs do that with the <code class=\"language-text\">rest-api</code> component.</p>\n<p>Add the REST API component to the <code class=\"language-text\">components</code> block of <code class=\"language-text\">serverless.yml</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiEndpoint</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> rest<span class=\"token punctuation\">-</span>api\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>apigateway\n      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">/sign-up</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">function</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>landingPageFunction<span class=\"token punctuation\">}</span>\n            <span class=\"token key atrule\">cors</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<p>Let‚Äôs break this down.</p>\n<p>The inputs for the <code class=\"language-text\">rest-api</code> component take a <code class=\"language-text\">gateway</code> and <code class=\"language-text\">routes</code>.</p>\n<p><code class=\"language-text\">gateway</code> is the API gateway you want to use. In this case we are using the <code class=\"language-text\">aws-apigateway</code> component.</p>\n<p><code class=\"language-text\">routes</code> are the URL paths and the functions that are triggered when they are hit. For a larger REST API example, see the <a href=\"https://github.com/serverless/components/tree/master/examples/retail-app\"><code class=\"language-text\">/examples/retail-app</code> here</a>.</p>\n<p><code class=\"language-text\">${landingPageFunction}</code> being referenced in the <code class=\"language-text\">/sign-up</code> route refers to the function that we had previously defined. So we are passing a direct reference of the function into the rest-api component. Aka, <em>composiblity</em>.</p>\n<p>At this point, your full <code class=\"language-text\">serverless.yml</code> should look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> landing<span class=\"token punctuation\">-</span>page\n\n<span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">landingPageFunction</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>lambda\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> <span class=\"token number\">512</span>\n      <span class=\"token key atrule\">timeout</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> code/handler.landingPageFunction\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">MAILCHIMP_API_KEY</span><span class=\"token punctuation\">:</span> xyzabc123456<span class=\"token punctuation\">-</span>us11\n        <span class=\"token key atrule\">MAILCHIMP_LIST_ID</span><span class=\"token punctuation\">:</span> f95d7512fd\n        <span class=\"token key atrule\">MAILCHIMP_REGION</span><span class=\"token punctuation\">:</span> us11\n  <span class=\"token key atrule\">apiEndpoint</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> rest<span class=\"token punctuation\">-</span>api\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>apigateway\n      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">/sign-up</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">function</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>landingPageFunction<span class=\"token punctuation\">}</span>\n            <span class=\"token key atrule\">cors</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">myNetlifySite</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> netlify<span class=\"token punctuation\">-</span>site\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">netlifyApiToken</span><span class=\"token punctuation\">:</span> abc\n      <span class=\"token key atrule\">githubApiToken</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123</span>\n      <span class=\"token key atrule\">siteName</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>awesome<span class=\"token punctuation\">-</span>site<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol.netlify.com\n      <span class=\"token key atrule\">siteDomain</span><span class=\"token punctuation\">:</span> testing<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol.com\n      <span class=\"token key atrule\">siteForceSSL</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># not in use</span>\n      <span class=\"token key atrule\">siteRepo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/serverless/netlify<span class=\"token punctuation\">-</span>landing<span class=\"token punctuation\">-</span>page\n      <span class=\"token key atrule\">siteBuildCommand</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token key atrule\">siteBuildDirectory</span><span class=\"token punctuation\">:</span> build\n      <span class=\"token key atrule\">siteRepoBranch</span><span class=\"token punctuation\">:</span> master\n      <span class=\"token key atrule\">siteRepoAllowedBranches</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> master</code></pre></div>\n<h5>4. Expose the API endpoint to the Netlify site</h5>\n<p>Great news! We have all the pieces we need for the functionality we are after.</p>\n<p>There is one last step we need to handle. We need to give the live URL to the frontend for it to know where to actually send the form data.</p>\n<p>We are going to supply the live endpoint to the frontend during the site build as an environment variable.</p>\n<p>Because components have outputs, we can pass values from one component to another.</p>\n<p>So we need to use the <code class=\"language-text\">siteEnvVars</code> input for the <code class=\"language-text\">netlify-site</code> component and pass it the <code class=\"language-text\">url</code> output from the <code class=\"language-text\">rest-api</code> component.</p>\n<p>We do so like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> landing<span class=\"token punctuation\">-</span>page\n\n<span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">landingPageFunction</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>lambda\n    <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">apiEndpoint</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> rest<span class=\"token punctuation\">-</span>api\n    <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">myNetlifySite</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> netlify<span class=\"token punctuation\">-</span>site\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">netlifyApiToken</span><span class=\"token punctuation\">:</span> abc\n      <span class=\"token key atrule\">githubApiToken</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123</span>\n      <span class=\"token key atrule\">siteName</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>awesome<span class=\"token punctuation\">-</span>site<span class=\"token punctuation\">-</span>lol<span class=\"token punctuation\">-</span>lol.netlify.com\n      <span class=\"token punctuation\">...</span>\n      <span class=\"token key atrule\">siteEnvVars</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">REACT_APP_SIGNUP_API</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>apiEndpoint.url<span class=\"token punctuation\">}</span>sign<span class=\"token punctuation\">-</span>up</code></pre></div>\n<p><code class=\"language-text\">${apiEndpoint.url}</code> refers to the <code class=\"language-text\">apiEndpoint</code> rest-api component and it‚Äôs outputted value of <code class=\"language-text\">url</code>.</p>\n<p>So <code class=\"language-text\">${apiEndpoint.url}sign-up</code> will resolve to something like <code class=\"language-text\">https://3m0ylzhbxk.execute-api.us-east-1.amazonaws.com/dev/sign-up</code>.</p>\n<p>We are passing that value into the Netlify site build environment variables with the <code class=\"language-text\">create-react-app</code> conventions <code class=\"language-text\">REACT_APP_${YOUR KEY}</code>.</p>\n<p>This way, we can use <code class=\"language-text\">process.env.REACT_APP_SIGNUP_API</code> in our React app‚Äôs code:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> formAPI <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">REACT_APP_SIGNUP_API</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">formHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    email<span class=\"token operator\">:</span> email\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> formAPI<span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can see this in action in our <a href=\"https://github.com/serverless/netlify-landing-page/blob/58eacc5a745d48c8894b4a4932c338617848032e/src/App.js#L6\">landing page repo</a>.</p>\n<p>Your full <code class=\"language-text\">serverless.yml</code> should look like:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> landing<span class=\"token punctuation\">-</span>page\n\n<span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">landingPageFunction</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>lambda\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> <span class=\"token number\">512</span>\n      <span class=\"token key atrule\">timeout</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> code/handler.landingPageFunction\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">MAILCHIMP_API_KEY</span><span class=\"token punctuation\">:</span> xyz<span class=\"token punctuation\">-</span>us11\n        <span class=\"token key atrule\">MAILCHIMP_LIST_ID</span><span class=\"token punctuation\">:</span> lol<span class=\"token punctuation\">-</span>id<span class=\"token punctuation\">-</span>here\n        <span class=\"token key atrule\">MAILCHIMP_REGION</span><span class=\"token punctuation\">:</span> us11\n  <span class=\"token key atrule\">apiEndpoint</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> rest<span class=\"token punctuation\">-</span>api\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>apigateway\n      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">/sign-up</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">function</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>landingPageFunction<span class=\"token punctuation\">}</span>\n            <span class=\"token key atrule\">cors</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">myNetlifySite</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> netlify<span class=\"token punctuation\">-</span>site\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">netlifyApiToken</span><span class=\"token punctuation\">:</span> xxxx\n      <span class=\"token key atrule\">githubApiToken</span><span class=\"token punctuation\">:</span> yyyy\n      <span class=\"token key atrule\">siteName</span><span class=\"token punctuation\">:</span> serverless<span class=\"token punctuation\">-</span>components.netlify.com\n      <span class=\"token key atrule\">siteDomain</span><span class=\"token punctuation\">:</span> components.serverless.com\n      <span class=\"token key atrule\">siteForceSSL</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># not in use</span>\n      <span class=\"token key atrule\">siteRepo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/serverless/netlify<span class=\"token punctuation\">-</span>landing<span class=\"token punctuation\">-</span>page\n      <span class=\"token key atrule\">siteBuildCommand</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token key atrule\">siteBuildDirectory</span><span class=\"token punctuation\">:</span> build\n      <span class=\"token key atrule\">siteRepoBranch</span><span class=\"token punctuation\">:</span> master\n      <span class=\"token key atrule\">siteRepoAllowedBranches</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> master\n      <span class=\"token key atrule\">siteEnvVars</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">REACT_APP_SIGNUP_API</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>apiEndpoint.url<span class=\"token punctuation\">}</span>sign<span class=\"token punctuation\">-</span>up</code></pre></div>\n<h4>Deploy!</h4>\n<p>We have created our landing page. It‚Äôs time for the final deploy.</p>\n<p>In your terminal run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>/bin/components deploy</code></pre></div>\n<h4>Summary</h4>\n<p>As you can see, with just a couple of components you can have a landing page up and running in no time.</p>\n<p>What will you build with components?</p>\n<h5>More on Components</h5>\n<ul>\n<li><a href=\"https://serverless.com/blog/what-are-serverless-components-how-use/\">What are Serverless Components, and how do I use them?</a></li>\n<li><a href=\"https://serverless.com/blog/how-create-rest-api-serverless-components/\">Create a REST API with pre-written Serverless Components</a></li>\n<li><a href=\"https://serverless.com/blog/how-to-create-blog-using-components-hugo/\">Create a blog site with pre-written Serverless Components and Hugo</a></li>\n</ul>","frontmatter":{"title":"How to create a landing page with serverless components","date":"April 30, 2018","description":"Using serverless components to build a static website landing page."}}},"pageContext":{"slug":"/posts/2018-04-30-how-to-create-landing-page-with-serverless-components/","previous":{"fields":{"slug":"/posts/2018-04-27-automating-ci-for-python-serverless-app-with-circleci/"},"frontmatter":{"title":"Automating a CI workflow for a Python serverless app with CircleCI"}},"next":{"fields":{"slug":"/posts/2018-05-02-fn-project-serverless/"},"frontmatter":{"title":"Fn Project brings containerized, cloud-agnostic functions to a cloud near you"}}}}}