{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2018-03-09-serverless-by-the-numbers-2018-data-report/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"3e951088-97b9-5a35-8bd1-db8d07fcff56","excerpt":"When it comes to how people use serverless, there are plenty of anecdotes out there. “I consolidated all my APIs down into a single serverless GraphQL endpoint…","html":"<p>When it comes to how people use serverless, there are plenty of anecdotes out there.</p>\n<p>“I consolidated all my APIs down into a single serverless GraphQL endpoint.” “I used serverless to power my machine learning instance.” “What is a server, again? No idea what that is. I know what Lambda is though, is it like Lambda?”</p>\n<p>(Disclaimer: I made that last one up.)</p>\n<p>But the point is, those are just anecdotes. What do the cold hard numbers have to say about it?</p>\n<p>Eternal questions, my friend. Which this post will dare to answer. With <em>charts</em>.</p>\n<h2>Event sources</h2>\n<p>To address the biggest question of the day: just what are developers putting inside all these services they’re deploying?</p>\n<h3>APIs dominate</h3>\n<p>The answer: http.</p>\n<p>So, a bit of useful background before we dig in. Services with only one event type make up 79% of all services. 16% of all services utilize exactly two event types, and 4% of all services contain three or more.</p>\n<p>To make the data a bit easier to ingest, we’re going to break this out a few different ways. First, here’s a chart showing only the single event-source services (remember, this is 79% of the whole):</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/data-report-2018/services-single-event-type1.jpg\">\n<p><em>All services with a single event type, broken out by event type</em></p>\n<p>The majority of services with <em>two</em> event types (16% of all services) have http as one of them—http + cron, http + sns, you get the idea. There’s a pretty big ‘other’ bucket, but that’s mostly because there were a lot of permutations to represent and we kept it to the most popular:</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/data-report-2018/services-2-types1.jpg\">\n<p><em>All services with exactly two event types, broken out by event type</em></p>\n<p>It gets a little ridiculous to break out all the permutations of services with 3+ event sources, but those make up a little over 4% of all deployed services.</p>\n<h3>How many functions per service?</h3>\n<p>Let’s take a look at how many functions developers are cramming into each service. Note that this chart only includes services that have seen development activity on 3 distinct days, as an attempt to exclude “Hello, World” apps.</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/data-report-2018/functions-per-service1.jpg\">\n<p><em>Services, bucketed by number of functions</em></p>\n<h2>Top languages</h2>\n<p>Which runtimes are serverless developers gravitating to?</p>\n<h3>Overall</h3>\n<p>Node.js is the clear front-runner, followed by Python.</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/data-report-2018/services-deployed-pie1.jpg\">\n<p><em>Percentage of services deployed, by language.</em></p>\n<h3>Fastest-growing</h3>\n<p>Let’s look at all language prevalence over time (excluding Node 6.10, which otherwise completely dominates):</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/data-report-2018/services-by-language-line1.jpg\">\n<p><em>Languages used on AWS (minus Node 6.10), in percentage of services</em></p>\n<p>Python 3.6 is the most steadily-growing language overall in the past eight months, with an especially big breakout this year.</p>\n<p>However, the relatively long time scale on the chart above reduces Go to a blip in the lower right corner. This is because Go has only been supported by Lambda since January (or about 2 months, at the time of writing).</p>\n<h3>Golang adoption curve</h3>\n<p><a href=\"https://serverless.com/blog/ultimate-list-serverless-announcements-reinvent/#golang-support\">Golang support</a> was one of the most-talked about re:Invent 2017 announcements (that, and <a href=\"https://serverless.com/blog/serverless-aurora-future-of-data/\">Serverless Aurora</a>). But it didn’t become GA until January 2018.</p>\n<p>So, how quickly has Go picked up speed?</p>\n<p>Here’s a breakout of each language (versions combined), directly comparing August 2017 to February 2018:</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/data-report-2018/services-by-language-full1.jpg\">\n<p><em>Languages used on AWS, in percentage of services</em></p>\n<p>In a mere six weeks, Go is already at about half of Java usage. Also worth noting that Node.js prevalence fell three percentage points from August to February.</p>\n<p>Just for fun, let’s see what the experimentation curve looks like. For that, we’re going to take a week over week look at the number of deployments for services written in Go since January 15th. (Note that this isn’t number of <em>services</em>, but number of deployments; in other words, how often are people playing around with Go.)</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/data-report-2018/go-deployments1.jpg\">\n<p><em>Golang usage on AWS, in percentage of all deployments</em></p>\n<p>Yeah. It has tripled already. That’s some steady growth.</p>\n<p>It’ll be <em>really</em> interesting to see what the services chart looks like next year.</p>\n<h2>When do devs do their deployments?</h2>\n<p>At 7:00am! Ok not really.</p>\n<p>Peak service deployment hours, it turns out, are between lunch time and get-off-work time:</p>\n<img src=\"https://s3-us-west-2.amazonaws.com/assets.blog.serverless.com/data-report-2018/deploy-times1.jpg\">\n<h2>Tl;dr</h2>\n<ul>\n<li>Python 3.6 is growing fast, but Go isn’t doing bad either</li>\n<li>APIs are dominating serverless use cases</li>\n<li>Developers hate mornings</li>\n</ul>","frontmatter":{"title":"Serverless by the numbers: 2018 report","date":"March 09, 2018","description":"Serverless usage stats: event sources, service structures, runtimes, and more."}}},"pageContext":{"slug":"/posts/2018-03-09-serverless-by-the-numbers-2018-data-report/","previous":{"fields":{"slug":"/posts/2018-03-07-serverless-workaround-cloudformation-200-resource-limit/"},"frontmatter":{"title":"Serverless Workarounds for CloudFormation's 200 Resource Limit"}},"next":{"fields":{"slug":"/posts/2018-03-19-how-contribute-to-serverless-open-source/"},"frontmatter":{"title":"How to contribute to Serverless open source projects"}}}}}